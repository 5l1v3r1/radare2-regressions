D 0000 nop
D 0110 move v0, v1
D 02001900 move/from16 v0, v25
D 03000000 move/16 v0, v0
D 04000000 move-wide v0, v0
D 05160000 move-wide/from16 v22, v0
D 06000000 move-wide/16 v0, v0
D 0781 move-object v1, v8
D 08011500 move-object/from16 v1, v21
D 0900 move-object/16 v0, v0
D 0A00 move-result v0
D 0B02 move-result-wide v2
D 0C00 move-result-object v0
D 0D19 move-exception v25
D 0E00 return-void
D 0F00 return v0
D 1000 return-wide v0
D 1100 return-object v0
D 1221 const/4 v1, 0x2
D 13000A00 const/16 v0, 0x0a
D 14004E61BC00 const v0, 0x00bc614e
D 15002041 const/high16 v0, 0x41200000
D 16000000 const-wide/16 v0, 0000
D 17024e61bc00 const-wide/32 v2:v3, 0x00bc614e
D 1802874b6b5d54dc2b00 const-wide v2:v3, 0x2bdc545d6b4b87
D 19002440 const-wide/high16 v0:v1, 0x40240000
D 1A080000 const-string v8, string+0
D 1B080000 const-string/jumbo v8, string+0
D 1C000100 const-class v0, class+1
D 1D030000 monitor-enter v3
D 1E030000 monitor-exit v3
D 1F040100 check-cast v4, class+1
D 20400100 instance-of v0, v4, class+1
D 21110000 array-length v1, v1
D 22000100 new-instance v0, class+1
D 23120100 new-array v2, v1, class+1
D 242001000000 filled-new-array {v0, v0}, class+1
D 250306001300 filled-new-array/range {v19..v21}, class+6
D 260625000000 fill-array-data v6, 0x00000025
D 2700 throw v0
D 1F030200 check-cast v3, class+2
D 1F050001 check-cast v5, class+256
D 28F0 goto 0xffffffffffffffe0
D 29000FFE goto/16 0xfffffffffffffc1e
D 2A000FFE goto/32 0x0001fc1e
D 2B020C000000 packed-switch v2, 0x0000000c
D 2C020c000000 sparse-switch v2, 0x0000000c
D 2D000607 cmpl-float v0, v6, v7
D 2E000607 cmpg-float v0, v6, v7
D 2F190608 cmpl-double v25, v6, v8
D 3000080A cmpg-double v0, v8, v10
D 31000204 cmp-long v0, v2, v4
D 32b30000 if-eq v3, v11, 0x00000000
D 33A30000 if-ne v3, v10, 0x00000000
D 34320000 if-lt v2, v3, 0x00000000
D 35100000 if-ge v0, v1, 0x00000000
D 36100000 if-gt v0, v1, 0x00000000
D 37560000 if-le v6, v5, 0x00000000
D 38020000 if-eqz v2, 0x00000000
D 39020000 if-nez v2, 0x00000000
D 3A000000 if-ltz v0, 0x00000000
D 3B000000 if-gez v0, 0x00000000
D 3C000000 if-gtz v0, 0x00000000
D 3D000000 if-lez v0, 0x00000000
D 44070306 aget v7, v3, v6
D 45050104 aget-wide v5, v1, v4
D 46020200 aget-object v2, v2, v0
D 47000001 aget-boolean v0, v0, v1
D 48000001 aget-byte v0, v0, v1
D 49050003 aget-char v5, v0, v3
D 4A000001 aget-short v0, v0, v1
D 4B000305 aput v0, v3, v5
D 4C050104 aput-wide v5, v1, v4
D 4D020100 aput-object v2, v1, v0
D 4E010002 aput-boolean v1, v0, v2
D 4F020001 aput-byte v2, v0, v1
D 50030001 aput-char v3, v0, v1
D 51020001 aput-short v2, v0, v1
D 52100300 iget v0, v1, field+3
D 53200400 iget-wide v0, v2, field+4
D 54200400 iget-object v0, v2, field+4
D 55FC0000 iget-boolean v12, v15, field+0
D 56320100 iget-byte v2, v3, field+1
D 57200300 iget-char v0, v2, field+3
D 58300800 iget-short v0, v3, field+8
D 59200200 iput v0, v2, field+2
D 5A200000 iput-wide v0, v2, field+0
D 5B200000 iput-object v0, v2, field+0
D 5C300000 iput-boolean v0, v3, field+0
D 5D200100 iput-byte v0, v2, field+1
D 5E200300 iput-char v0, v2, field+3
D 5F210800 iput-short v1, v2, field+8
D 60000700 sget v0, field+7
D 61000500 sget-wide v0, field+5
D 62010C00 sget-object v1, field+12
D 63000C00 sget-boolean v0, field+12
D 64000200 sget-byte v0, field+2
D 65000700 sget-char v0, field+7
D 66000B00 sget-short v0, field+11
D 67000100 sput v0, field+1
D 68000500 sput-wide v0, field+5
D 69000c00 sput-object v0, field+12
D 6A000300 sput-boolean v0, field+3
D 6B000200 sput-byte v0, field+2
D 6C010700 sput-char v1, field+7
D 6D000B00 sput-short v0, field+11
D 6E5306000421 invoke-virtual {v4, v0, v1, v2, v3}, method+6
D 6F10A6010100 invoke-super {v1}, method+422
D 701008000100 invoke-direct {v1}, method+8
D 711034000400 invoke-static {v4}, method+52
D 724021023154 invoke-interface {v1, v3, v4, v5}, method+545
D 740306001300 invoke-virtual/range {v19..v21}, method+6
D 7501A6010100 invoke-super/range {v1..v1}, method+422
D 76033A001300 invoke-direct/range {v19..v21}, method+58
D 77033A001300 invoke-static/range {v19..v21}, method+58
D 784021020100 invoke-interface/range {v1..v64}, method+545
D 7B01 neg-int v1, v0
D 7C01 not-int v1, v0
D 7D02 neg-long v2, v0
D 7E02 not-long v2, v0
D 7F01 neg-float v1, v0
D 8002 neg-double v2, v0
D 8106 int-to-long v6, v0
D 8206 int-to-float v6, v0
D 8306 int-to-double v6, v0
D 8424 long-to-int v4, v2
D 8510 long-to-float v0, v1
D 8610 long-to-double v0, v1
D 8730 float-to-int v0, v3
D 8830 float-to-long v0, v3
D 8930 float-to-double v0, v3
D 8A40 double-to-int v0, v4
D 8B40 double-to-long v0, v4
D 8C40 double-to-float v0, v4
D 8D00 int-to-byte v0, v0
D 8E33 int-to-char v3, v3
D 8F00 int-to-short v0, v0
D 90000203 add-int v0, v2, v3
D 91000203 sub-int v0, v2, v3
D 92000203 mul-int v0, v2, v3
D 93030001 div-int v3, v0, v1
D 94000203 rem-int v0, v2, v3
D 95030001 and-int v3, v0, v1
D 96030001 or-int v3, v0, v1
D 97030001 xor-int v3, v0, v1
D 98020001 shl-int v2, v0, v1
D 99020001 shr-int v2, v0, v1
D 9A020001 ushr-int v2, v0, v1
D 9B000305 add-long v0, v3, v5
D 9C000305 sub-long v0, v3, v5
D 9D000305 mul-long v0, v3, v5
D 9E060002 div-long v6, v0, v2
D 9F060002 rem-long v6, v0, v2
D A0060002 and-long v6, v0, v2
D A1060002 or-long v6, v0, v2
D A2060002 xor-long v6, v0, v2
D A3020004 shl-long v2, v0, v4
D A4020004 shr-long v2, v0, v4
D A5020004 ushr-long v2, v0, v4
D A6000203 add-float v0, v2, v3
D A7000203 sub-float v0, v2, v3
D A8030001 mul-float v3, v0, v1
D A9030001 div-float v3, v0, v1
D AA030001 rem-float v3, v0, v1
D AB000305 add-double v0, v3, v5
D AC000305 sub-double v0, v3, v5
D AD060002 mul-double v6, v0, v2
D AE060002 div-double v6, v0, v2
D AF060002 rem-double v6, v0, v2
D B010 add-int/2addr v0, v1
D B140 sub-int/2addr v0, v4
D B210 mul-int/2addr v0, v1
D B310 div-int/2addr v0, v1
D B410 rem-int/2addr v0, v1
D B510 and-int/2addr v0, v1
D B610 or-int/2addr v0, v1
D B710 xor-int/2addr v0, v1
D B810 shl-int/2addr v0, v1
D B910 shr-int/2addr v0, v1
D BA10 ushr-int/2addr v0, v1
D BB20 add-long/2addr v0, v2
D BC70 sub-long/2addr v0, v7
D BD70 mul-long/2addr v0, v7
D BE20 div-long/2addr v0, v2
D BF20 rem-long/2addr v0, v2
D C020 and-long/2addr v0, v2
D C120 or-long/2addr v0, v2
D C220 xor-long/2addr v0, v2
D C320 shl-long/2addr v0, v2
D C420 shr-long/2addr v0, v2
D C520 ushr-long/2addr v0, v2
D C640 add-float/2addr v0, v4
D C740 sub-float/2addr v0, v4
D C810 mul-float/2addr v0, v1
D C910 div-float/2addr v0, v1
D CA10 rem-float/2addr v0, v1
D CB70 add-double/2addr v0, v7
D CC70 sub-double/2addr v0, v7
D CD20 mul-double/2addr v0, v2
D CE20 div-double/2addr v0, v2
D CF20 rem-double/2addr v0, v2
D D001D204 add-int/lit16 v1, v0, 0x4d2
D D101D204 rsub-int v1, v0, 0x4d2
D D201D204 mul-int/lit16 v1, v0, 0x4d2
D D301D204 div-int/lit16 v1, v0, 0x4d2
D D401D204 rem-int/lit16 v1, v0, 0x4d2
D D501D204 and-int/lit16 v1, v0, 0x4d2
D D601D204 or-int/lit16 v1, v0, 0x4d2
D D701D204 xor-int/lit16 v1, v0, 0x4d2
D D8000201 add-int/lit8 v0, v2, 0x1
D D9000201 rsub-int/lit8 v0, v2, 0x1
D DA000002 mul-int/lit8 v0, v0, 0x2
D DB000203 div-int/lit8 v0, v2, 0x3
D DC000203 rem-int/lit8 v0, v2, 0x3
D DD000203 and-int/lit8 v0, v2, 0x3
D DE000203 or-int/lit8 v0, v2, 0x3
D DF000203 xor-int/lit8 v0, v2, 0x3
D E0010001 shl-int/lit8 v1, v0, 0x1
D E1010001 shr-int/lit8 v1, v0, 0x1
D E2010001 ushr-int/lit8 v1, v0, 0x1
D EE2003000100 +execute-inline {v1, v0}, method+3
D F010F6080000 +invoke-object-init-range {v0}, method+2294
D F2211000 +iget-quick v1, v2, [obj+0010]
D F3643001 +iget-wide-quick v4, v6, [obj+0130]
D F4310C00 +iget-object-quick v1, v3, [obj+000c]
D F5211000 +iput-quick v1, v2, [obj+0010]
D F6527001 +iput-wide-quick v2, v5, [obj+0170]
D F7014C00 +iput-object-quick v1, v0, [obj+004c]
D F820B800CF00 +invoke-virtual-quick {v15, v12}, [00b8]
D F90618000000 +invoke-virtual-quick/range {v0..v5}, [0018]
D FA4081003254 +invoke-super-quick {v2, v3, v4, v5}, [0081]
D F9061B000000 +invoke-virtual-quick/range {v0..v5}, [001b]