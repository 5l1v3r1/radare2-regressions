NAME=Backward param type propgation
FILE=../bins/anal/back1
CMDS=<<EXPECT
aa
s main
afta
afv
EXPECT=<<RUN
var size_t size @ rbp-0x14
var char * dest @ rbp-0x10
var char * src @ rbp-0x8
RUN

NAME=Forward param type propgation
FILE=../bins/anal/forward1
CMDS=<<EXPECT
aa
s main
afta
afv
EXPECT=<<RUN
var size_t size @ rbp-0x14
var char * ptr @ rbp-0x10
var char * src @ rbp-0x8
RUN

NAME=Propgation via value
FILE=../bins/anal/follow_ptr
CMDS=<<EXPECT
aa
s main
afta
afv
EXPECT=<<RUN
var size_t local_1ch @ rbp-0x1c
var char * local_18h @ rbp-0x18
var char * s @ rbp-0x10
var char * local_8h @ rbp-0x8
RUN

NAME=General type propgation
FILE=../bins/anal/hello_world
CMDS=<<EXPECT
aa
s main
afta
afv
EXPECT=<<RUN
var size_t local_20h @ rbp-0x20
var size_t size @ rbp-0x1c
var char * src @ rbp-0x18
var char * s2 @ rbp-0x10
var char * dest @ rbp-0x8
RUN

NAME=32-bit bin type propgation
FILE=../bins/anal/hello_world32
CMDS=<<EXPECT
aa
s main
afta
afv
EXPECT=<<RUN
arg int arg_4h @ esp+0x4
var char * src @ ebp-0x1c
var char * s2 @ ebp-0x18
var size_t local_14h @ ebp-0x14
var size_t size @ ebp-0x10
var char * dest @ ebp-0xc
var int local_8h @ ebp-0x8
RUN

NAME=Register based var
FILE=../bins/anal/arg
CMDS=<<EXPECT
aa
s sym.funcarg
afvr
EXPECT=<<RUN
arg int arg1 @ rdi
arg int arg2 @ rsi
arg int arg3 @ rdx
arg int arg4 @ rcx
RUN

NAME=Type propgation for reg based arg
FILE=../bins/anal/arg
CMDS=<<EXPECT
aa
afta
s sym.funcarg
afvr
EXPECT=<<RUN
arg char * arg1 @ rdi
arg char * arg2 @ rsi
arg int arg3 @ rdx
arg size_t arg4 @ rcx
RUN

NAME=Caller to callee propgation (64 bits)
FILE=../bins/anal/arg_down_prop
CMDS=<<EXPECT
e asm.lines = false
e asm.xrefs = false
aa
afta
s sym.funcarg
pd 1
EXPECT=<<RUN
(fcn) sym.funcarg 154
  sym.funcarg (char *arg1, unsigned int arg2);
; var unsigned int local_ch @ rbp-0xc
; var char *local_8h @ rbp-0x8
0x0000068a      55             push rbp
RUN

NAME=Caller to caller propgation (32 bits)
FILE=../bins/anal/arg_down_32
CMDS=<<EXPECT
e asm.lines = false
e asm.xrefs = false
aa
afta
s sym.funcarg
pd 1
EXPECT=<<RUN
(fcn) sym.funcarg 147
  sym.funcarg (char *arg_8h, unsigned int arg_ch);
; var int local_4h @ ebp-0x4
; arg char *arg_8h @ ebp+0x8
; arg unsigned int arg_ch @ ebp+0xc
0x0000054d      55             push ebp
RUN

NAME=Type Propagation
FILE=../bins/pe/debugme.exe
BROKEN=1
CMDS=<<EXPECT
aaaa
pd 1 @ 0x00401792~?[n
pd 1 @ 0x00401796~?[c
pd 1 @ 0x0040179e~?[s
pd 1 @ 0x004017b1~?[n
pd 1 @ 0x004017b5~?[c
pd 1 @ 0x004017bd~?[s
pd 1 @ 0x0040186a~?[s2
pd 1 @ 0x0040186e~?[s1
pd 1 @ 0x0040152f~?[dwInitParam
pd 1 @ 0x00401537~?[lpDialogFunc
pd 1 @ 0x0040153f~?[hWndParent
pd 1 @ 0x00401547~?[lpTemplateName
pd 1 @ 0x00401554~?[hInstance
EXPECT=<<RUN
1
1
1
1
1
1
1
1
1
1
1
1
1
RUN

NAME=Double pointer test
FILE=../bins/anal/double_ptr
CMDS=<<EXPECT
aa
afta
s main
afv~ptr
EXPECT=<<RUN
var char ** ptr @ rbp-0x18
RUN

NAME=Signed and unsigned test
FILE=../bins/anal/signed_test
CMDS=<<EXPECT
aa
afta
s main
afv~sign
EXPECT=<<RUN
var signed int local_34h @ rbp-0x34
var signed int local_30h @ rbp-0x30
var unsigned int local_28h @ rbp-0x28
RUN

NAME=flagspace analysis
FILE=../bins/anal/flagspace
CMDS=<<EXPECT
aa
afta
s main
afv
EXPECT=<<RUN
var int local_34h @ rbp-0x34
var signed int local_30h @ rbp-0x30
var unsigned int local_2ch @ rbp-0x2c
var FILE * stream @ rbp-0x28
var char * s @ rbp-0x20
var char * local_18h @ rbp-0x18
var char * local_10h @ rbp-0x10
var int local_8h @ rbp-0x8
RUN

NAME=bashbot test (x86_64)
FILE=../bins/anal/bashbot.x86_64.O0.elf
CMDS=<<EXPECT
aa
afta
s main
afv
s sym.processCmd
afv
EXPECT=<<RUN
var int local_14e0h @ rbp-0x14e0
var int local_14d4h @ rbp-0x14d4
var int wstatus @ rbp-0x14cc
var int options @ rbp-0x14c8
var int local_14c4h @ rbp-0x14c4
var signed int local_14c0h @ rbp-0x14c0
var int local_14bch @ rbp-0x14bc
var pid_t pid @ rbp-0x14b8
var unsigned int local_14b4h @ rbp-0x14b4
var unsigned int local_14b0h @ rbp-0x14b0
var int local_14ach @ rbp-0x14ac
var char * local_14a8h @ rbp-0x14a8
var char * s @ rbp-0x14a0
var char * local_1498h @ rbp-0x1498
var char * src @ rbp-0x1490
var char * v2 @ rbp-0x1488
var char * local_1480h @ rbp-0x1480
var void * local_1478h @ rbp-0x1478
var char * local_1470h @ rbp-0x1470
var void * local_1420h @ rbp-0x1420
var char * s1 @ rbp-0x1020
var int local_18h @ rbp-0x18
arg int arg_1020h @ rbp+0x1020
arg char * dest @ rbp+0x1470
arg int arg1 @ rdi
arg int arg2 @ rsi
var char ** str @ rbp-0xb0
var signed int local_a4h @ rbp-0xa4
var signed int local_a0h @ rbp-0xa0
var unsigned int local_9ch @ rbp-0x9c
var int local_98h @ rbp-0x98
var int local_94h @ rbp-0x94
var int local_90h @ rbp-0x90
var int local_8ch @ rbp-0x8c
var int local_88h @ rbp-0x88
var int local_84h @ rbp-0x84
var int local_80h @ rbp-0x80
var int local_7ch @ rbp-0x7c
var int local_78h @ rbp-0x78
var int local_74h @ rbp-0x74
var int local_70h @ rbp-0x70
var int local_6ch @ rbp-0x6c
var int local_68h @ rbp-0x68
var int local_64h @ rbp-0x64
var char * local_60h @ rbp-0x60
var char * local_58h @ rbp-0x58
var char * local_50h @ rbp-0x50
var char * local_48h @ rbp-0x48
var unsigned int local_40h @ rbp-0x40
var char * s1 @ rbp-0x38
var char * s @ rbp-0x30
var char * local_28h @ rbp-0x28
var char * local_20h @ rbp-0x20
var int local_18h @ rbp-0x18
var int local_8h @ rbp-0x8
arg signed int arg1 @ rdi
arg char ** arg2 @ rsi
RUN

NAME=bashbot test (arm 32-bits)
FILE=../bins/anal/bashbot.arm.gcc.O0.elf
CMDS=<<EXPECT
s main
af
afta
afv
EXPECT=<<RUN
var int local_0h @ sp+0x0
var int local_48h @ fp-0x48
var char * s1 @ fp-0x44
var void * local_40h @ fp-0x40
var int local_3ch @ fp-0x3c
var int local_38h @ fp-0x38
var pid_t pid @ fp-0x34
var char * v4 @ fp-0x30
var int local_2ch @ fp-0x2c
var char * src @ fp-0x28
var int local_24h @ fp-0x24
var char * local_20h @ fp-0x20
var char * s @ fp-0x1c
var char * local_18h @ fp-0x18
var int local_14h @ fp-0x14
var int local_10h @ fp-0x10
arg unsigned long arg2 @ r1
RUN

NAME=format string parse
FILE=../bins/anal/format
CMDS=<<EXPECT
aa
afta
s main
afv
EXPECT=<<RUN
var int local_25h @ rbp-0x25
var signed int local_24h @ rbp-0x24
var unsigned int local_20h @ rbp-0x20
var int local_1ch @ rbp-0x1c
var char * local_18h @ rbp-0x18
var long int local_10h @ rbp-0x10
var char * local_8h @ rbp-0x8
RUN
