#!/bin/sh
for a in . .. ../.. ; do [ -e $a/tests.sh ] && . $a/tests.sh ; done


# -------------------------------
# B instruction

NAME="arc4: [B.D] - jump check"
FILE=malloc://16384
CMDS='
e asm.arch=arc
e asm.bits=32
wx 20040020 @ 0x207c
s 0x207c
ao 1~jump'
EXPECT='jump: 0x000020a0'

# -------------------------------
# B_NZ instruction

NAME="arc4: [BNZ.D] - jump check"
FILE=malloc://16384
CMDS='
e asm.arch=arc
e asm.bits=32
wx 22030020 @ 0x2100
s 0x2100
ao 1~jump'
EXPECT='jump: 0x0000211c'

NAME="arc4: [BNZ.JD] - jump check"
FILE=malloc://16384
CMDS='
e asm.arch=arc
e asm.bits=32
wx c2100020 @ 0x1f68
s 0x1f68
ao 1~jump'
EXPECT='jump: 0x00001ff0'

# -------------------------------
# B_GT instruction

NAME="arc4: [BGT] - jump check"
FILE=malloc://16384
CMDS='
e asm.arch=arc
e asm.bits=32
wx 89040020 @ 0x1b18
s 0x1b18
ao 1~jump'
EXPECT='jump: 0x00001b40'


# -------------------------------
# BL instruction

NAME="arc4: [BL.D] - jump check"
FILE=malloc://16384
CMDS='
e asm.arch=arc
e asm.bits=32
wx a0270228 @ 0x208c
s 0x208c
ao 1~jump'
EXPECT='jump: 0x000031cc'

# -------------------------------
# BL_HI instruction

NAME="arc4: [BLHI] - jump check"
FILE=malloc://16384
CMDS='
e asm.arch=arc
e asm.bits=32
wx ad130628 @ 0x1148
s 0x1148
ao 1~jump'
EXPECT='jump: 0x000041e8'

# -------------------------------
# LP instruction

NAME="arc4: [LP] - jump check"
FILE=malloc://16384
CMDS='
e asm.arch=arc
e asm.bits=32
wx 00020030 @ 0x1558
s 0x1558
ao 1~jump'
EXPECT='jump: 0x0000156c'

NAME="arc4: [LPNZ] - jump check"
FILE=malloc://16384
CMDS='
e asm.arch=arc
e asm.bits=32
wx 02020030 @ 0x1580
s 0x1580
ao 1~jump'
EXPECT='jump: 0x00001594'

# -------------------------------

NAME="ARC4 ISA instruction length"
FILE=malloc://64
BROKEN=1
CMDS='
e asm.arch=arc
e asm.bits=32
wx 017e1f102f420401 @ 0
wx 0afe5f60 @ 8
ao 2~size'
EXPECT='size: 8
size: 4'
