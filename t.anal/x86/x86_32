#!/bin/sh
for a in . .. ../.. ; do [ -e "$a/tests.sh" ] && . $a/tests.sh ; done

NAME="sar on x86-32"
CMDS='
e asm.arch=x86
e asm.bits=32
e anal.hasnext=0
# testing mov eax, -4 sar
# 64bit code seems to fail
# wx 48c7c0fcffffff 48d1f8 48d1f8 48d1f8 48d1f8 48d1f8 48d1f8
wx b8fcffffff d1f8 d1f8 d1f8 d1f8 d1f8 d1f8
aes
dr?eax
aes
dr?eax
aes
dr?eax
aes
dr?eax
aes
dr?eax
'
EXPECT='0xfffffffc
0xfffffffe
0xffffffff
0xffffffff
0xffffffff
'
run_test

NAME="sar on x86-64"
CMDS='
e asm.arch=x86
e asm.bits=64
e anal.hasnext=0
# testing mov eax, -4 sar
wx 48c7c0fcffffff 48d1f8 48d1f8 48d1f8 48d1f8 48d1f8 48d1f8
aes
dr?rax
aes
dr?rax
aes
dr?rax
aes
dr?rax
'
EXPECT='0xfffffffffffffffc
0xfffffffffffffffe
0xffffffffffffffff
0xffffffffffffffff
'
run_test

NAME=""
CMDS='
e asm.arch=x86
e asm.bits=64
e anal.hasnext=0
wx 48c7c0fcffffff 48d1f8 48d1f8 48d1f8
aes
dr?rax
aes
dr?rax
aes
dr?rax
'
EXPECT='0xfffffffffffffffc
0xfffffffffffffffe
0xffffffffffffffff
'
run_test

NAME='int 0x80 doesn t terminate a function'
CMDS='e asm.arch=x86
e asm.bits=32
e anal.hasnext=0
wx 5589d8b900000000b885000000cd8089c35dc3
af
afi~size
'
EXPECT='size: 19
'
run_test

NAME='ao 4~bytes'
CMDS='e asm.arch=x86
e asm.bits=32
e anal.hasnext=0
wx 554889e5415741564155
ao 3~bytes
'
EXPECT='bytes: 55
bytes: 48
bytes: 89e5
'
run_test

NAME='af fwd-jmp'
BROKEN=1
CMDS='e asm.arch=x86
e asm.bits=32
wx 558bec6800304000e86300000083c404eb0d6808304000e85400000083c4046814304000e84700000083c40433c05dc3
af
afb
'
EXPECT='
'
run_test

NAME='af fwd-jmp'
BROKEN=
FILE=../../bins/elf/license_1.out
CMDS='
af @ main
afb @ main~?
'
EXPECT='9
'
run_test
