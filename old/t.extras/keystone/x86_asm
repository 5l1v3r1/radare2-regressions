#!/bin/sh
for a in . .. ../.. ../../.. ; do [ -e $a/tests.sh ] && . $a/tests.sh; done

unset RASM2_NOPLUGINS
test_vector() {
NAME="${1} ${BITS}: [${2}]"
if [ "${4}" = "br" ]; then
    BROKEN=1
fi
CMDS='!rasm2 -a '${1}' -b '${BITS}' "'${2}'"
'
EXPECT="${3}
"
run_test
}

PLUGIN=x86.ks

# NOTE:
# Some instructions are assembled correctly, but there is a more
# efficient (== less bytes) way to assemble them. These are marked with
# comments starting with "cbs:" (Same, But Shorter).
#
# Also, there are instructions that are technically not assembled correctly,
# but the generated bytecode does exactly the same. E.g. "xchg ebx,ecx" is
# assembled as "87d9", which is "xchg ecx, ebx" - it's not the same, but does
# exactly the same. These instructions are accepted as correct, but marked with
# comments starting with "wbs" (Wrong, But Same).

BITS=64
test_vector "${PLUGIN}" "add r13, r15" 4d01f5 "br"
test_vector "${PLUGIN}" "add r15, rbx" 4901df "br"
test_vector "${PLUGIN}" "add rax, 44" 4883c02c
test_vector "${PLUGIN}" "add rax, r8" 4c01c0 "br"
test_vector "${PLUGIN}" "add rax, rcx" 4801c8
test_vector "${PLUGIN}" "call rbx" ffd3
test_vector "${PLUGIN}" "cmp rax, 33" 4883f821
test_vector "${PLUGIN}" "cmp rax, rbx" 4839d8
test_vector "${PLUGIN}" "cmp rbx, rax" 4839c3
test_vector "${PLUGIN}" "cmp rdx, rsi" 4839f2
test_vector "${PLUGIN}" "inc rdx" 48ffc2
test_vector "${PLUGIN}" "jmp rbx" ffe3
test_vector "${PLUGIN}" "lea rax, [rax+0]" 488d4000 "br"
test_vector "${PLUGIN}" "lea rax, [rax+1]" 488d4001
test_vector "${PLUGIN}" "lea rax, [rax-0]" 488d4000 "br" # sbs: 488d00
test_vector "${PLUGIN}" "lea rax, [rax-1]" 488d40ff "br"
test_vector "${PLUGIN}" "lea rax, [rax]" 488d00
test_vector "${PLUGIN}" "lea rax,[rel -10]" 488d05f6ffffff "br"
test_vector "${PLUGIN}" "lea rax,[rel 0]" 488d0500000000 "br"
test_vector "${PLUGIN}" "lea rax,[rel 10]" 488d050a000000 "br"
test_vector "${PLUGIN}" "lea rax,[rip+0]" 488d0500000000 "br"
test_vector "${PLUGIN}" "lea rax,[rip+10]" 488d050a000000 "br"
test_vector "${PLUGIN}" "lea rax,[rip-0]" 488d0500000000 "br"
test_vector "${PLUGIN}" "lea rax,[rip-10]" 488d05f6ffffff "br"
test_vector "${PLUGIN}" "lea rax,[rip]" 488d0500000000 "br"
test_vector "${PLUGIN}" "mov [rsi], rbx" 48891e
test_vector "${PLUGIN}" "mov edx, [rbp-4]" 8b55fc
test_vector "${PLUGIN}" "mov rax, 0x1122334455667788" 48b88877665544332211
test_vector "${PLUGIN}" "mov rax, 0x112233445566778899" 00 "br"
test_vector "${PLUGIN}" "mov rax, 3" 48c7c003000000 # sbs: b803000000
test_vector "${PLUGIN}" "mov rax, 33" 48c7c021000000 # sbs: b821000000
test_vector "${PLUGIN}" "mov rax, [rax+0]" 488b4000 "br" # sbs: 488d00
test_vector "${PLUGIN}" "mov rax, [rax+1]" 488b4001 "br"
test_vector "${PLUGIN}" "mov rax, [rax-0]" 488b4000 "br" # sbs: 488b00
test_vector "${PLUGIN}" "mov rax, [rax-1]" 488b40ff "br"
test_vector "${PLUGIN}" "mov rax, [rax]" 488b00 "br"
test_vector "${PLUGIN}" "mov rax,[rel -10]" 488b05f6ffffff "br"
test_vector "${PLUGIN}" "mov rax,[rel 0]" 488b0500000000
test_vector "${PLUGIN}" "mov rax,[rel 10]" 488b050a000000 "br"
test_vector "${PLUGIN}" "mov rax,[rip+0]" 488b0500000000
test_vector "${PLUGIN}" "mov rax,[rip+10]" 488b050a000000
test_vector "${PLUGIN}" "mov rax,[rip-0]" 488b0500000000
test_vector "${PLUGIN}" "mov rax,[rip-10]" 488b05f6ffffff
test_vector "${PLUGIN}" "mov rax,[rip]" 488b0500000000
test_vector "${PLUGIN}" "mov rbx, 3" 48c7c303000000 # sbs: bb03000000
test_vector "${PLUGIN}" "mov rbx, rax" 4889c3
test_vector "${PLUGIN}" "mov rcx, -0x1122334455667788" 48b9788899aabbccddee
test_vector "${PLUGIN}" "mov rcx, -0x112233445566778899" 00 "br"
test_vector "${PLUGIN}" "mov rsi, rbx" 4889de
test_vector "${PLUGIN}" "mov sil, 0" 40b600
test_vector "${PLUGIN}" "mov dil, -5" 40b7fb
test_vector "${PLUGIN}" "mov spl, bpl" 4088ec
test_vector "${PLUGIN}" "pop rax" 58
test_vector "${PLUGIN}" "prefetcht1 [eax]" 670f1810 "br"
test_vector "${PLUGIN}" "prefetcht1 [rax]" 0f1810 "br"
test_vector "${PLUGIN}" "prefetcht1 byte [eax]" 670f1810 "br"
test_vector "${PLUGIN}" "prefetcht1 byte [rax]" 0f1810 "br"
test_vector "${PLUGIN}" "shl rdx, 5" 48c1f205 "br" # wbs (correct: 48c1e205)
test_vector "${PLUGIN}" "sub rax, 44" 4883e82c
test_vector "${PLUGIN}" "sub rax, rbx" 4829d8
test_vector "${PLUGIN}" "test rax, rbx" 4885d8
test_vector "${PLUGIN}" "test rcx, rcx" 4885c9
test_vector "${PLUGIN}" "test rdx, rsi" 4885f2
test_vector "${PLUGIN}" "xor [rax], rax" 483100
test_vector "${PLUGIN}" "xor [rsi], rbx" 48311e
test_vector "${PLUGIN}" "xor rax, rax" 4831c0
test_vector "${PLUGIN}" "xor rdx, rdx" 4831d2
