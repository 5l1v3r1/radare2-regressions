#!/bin/sh

# GPL 3+ - Copyright (C) 2011-2012  pancake, Edd Barrett, Simon Ruderich

[ -e tests.sh ] && . ./tests.sh || . ../tests.sh

NAME='t?'
FILE=-
CMDS='t?'
EXPECT="|Usage: t # cparse types commands
| t                  List all loaded types
| t <type>           Show type in 'pf' syntax
| t*                 List types info in r2 commands
| t- <name>          Delete types by its name
| t-*                Remove all types
| tb <enum> <value>  Show matching enum bitfield for given number
| te <enum> <value>  Show name for given enum number
| td <string>        Load types from string
| tf <addr>          View linked type at given address
| tl[?]              Show/Link type to an address
| to -               Open cfg.editor to load types
| to <path>          Load types from C header file
| tk <sdb-query>     Perform sdb query
| ts <k>=<v>         Set fields at curseek linked type
"
run_test

NAME='t'
FILE=-
CMDS='t'
EXPECT='unsigned int
unsigned char
unsigned short
int
long
void *
char
char *
const char*
uint8_t
uint16_t
uint32_t
uint64_t
'
run_test

NAME="t <type>"
FILE=-
CMDS='t int
t-*
t int'
EXPECT='pf d
'
EXPECT_ERR='Cannot find 'int' type
'
run_test

NAME='t-enum'
FILE=-
CMDS='"td enum pe_machine { IMAGE_FILE_MACHINE_IA64=0x200, IMAGE_FILE_MACHINE_I386=0x14c };"
t-pe_machine
t~?pe_machine'
EXPECT='0
'
run_test

NAME='t-struct'
BROKEN=
FILE=-
CMDS='"td struct three_elements{int x; char y; float z;}"
t-three_elements
t~?three_elements
'
EXPECT='0
'
run_test

NAME='t-typedef'
BROKEN=
FILE=-
CMDS='"td typedef int Abracadabra"
t-pe_machine
t~?pe_machine
'
EXPECT='0
'
run_test

NAME='t-*'
BROKEN=
FILE=-
CMDS='"td enum pe_machine { IMAGE_FILE_MACHINE_IA64=0x200, IMAGE_FILE_MACHINE_I386=0x14c };"
t-*
t
'
EXPECT=''
run_test

NAME='tb'
BROKEN=
FILE=-
CMDS='
"td enum pe_machine { IMAGE_FILE_MACHINE_IA64=0x200, IMAGE_FILE_MACHINE_I386=0x14c };"
tb pe_machine IMAGE_FILE_MACHINE_I386
'
EXPECT='0x14c
'
run_test

NAME='te'
BROKEN=
FILE=-
CMDS='
"td enum pe_machine { IMAGE_FILE_MACHINE_IA64=0x200, IMAGE_FILE_MACHINE_I386=0x14c };"
te pe_machine 0x14c
'
EXPECT='IMAGE_FILE_MACHINE_I386
'
run_test

NAME='td struct'
BROKEN=
FILE=-
CMDS='
"td struct test_struct{int x;int y;};"
t~?test_struct
'
EXPECT='1
'
run_test

NAME='enum32'
BROKEN=
FILE=-
CMDS='
"td enum v { t=0x123, p=0x321 };"
t~?
tk v
tk v.t
tk v.p
'
EXPECT='14
enum

0x123

0x321

'
run_test



NAME='enum64'
FILE=-
CMDS='
"td enum v { t=0x8000000000000001, p=0x8000000000000008 };"
t~?
tk v.t
tk v.p
'
EXPECT='14
0x8000000000000001

0x8000000000000008

'
run_test

NAME='to error.h'
FILES=-
CMDS='
to ../bins/other/error.h
t
t addr
'
EXPECT_ERR='../bins/other/error.h:1: warning: #error this should be treated as warning
'
EXPECT='unsigned int
unsigned char
unsigned short
int
long
void *
char
char *
const char*
uint8_t
uint16_t
uint32_t
uint64_t
struct name
struct date
struct addr
struct dox
pf *z*zi street city zip 
'
run_test

NAME='to test.h'
FILE=-
CMDS='
to ../bins/other/test.h
t
t addr
'
EXPECT='unsigned int
unsigned char
unsigned short
int
long
void *
char
char *
const char*
uint8_t
uint16_t
uint32_t
uint64_t
struct name
struct date
struct addr
struct dox
pf *z*zi street city zip 
'
run_test


NAME='tl, tf test on structure'
FILE=-
CMDS='"td typedef struct name { char name[10]; } name"
s 100
w Carlos
s 0
wx 0x64
tl name @ 0x0
tf 0x0
'
EXPECT='struct name {
name : (*0x64) 0x00000000 = Carlos
}
'
run_test

