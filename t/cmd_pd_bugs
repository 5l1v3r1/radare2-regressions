#!/bin/sh
[ -e tests.sh ] && . ./tests.sh || . ../tests.sh

NAME='pd call sym bug'
FILE=../bins/mach0/hello-objc-arm
BROKEN=
ARGS=
CMDS='
e asm.lines=0
e asm.bytes=0
e asm.comments=0
s sym.__Test_callMeNot_
pd 20~?NSLog
af
pd 20~?NSLog
'
EXPECT="1
1
"
run_test

NAME='pd call sym bug'
FILE=../bins/mach0/hello-objc-arm
ARGS=
CMDS='
e asm.lines=0
e asm.bytes=0
e asm.comments=0
s sym.__Test_callMeNot_
# s+2
pi 2
'
EXPECT="push {r7, lr}
mov r7, sp
"
run_test

NAME='call fcn eip 32bit'
FILE=../bins/elf/analysis/ls-alxchk
ARGS=
CMDS='
s 0x5e50
e asm.bits=32
af; afn eip
pd 1 @ 0x5f16~:0
e asm.lines=0
e asm.bytes=0
e asm.comments=0
'
EXPECT="            0x00005f16      e835ffffff     call fcn.eip
"
run_test

NAME='call fcn eip 64bit'
FILE=../bins/elf/analysis/ls-alxchk
BROKEN=1
ARGS=
CMDS='
s 0x5e50
e asm.bits=64
af; afn eip
pd 1 @ 0x5f16~:0
e asm.lines=0
e asm.bytes=0
e asm.comments=0
'
EXPECT="            0x00005f16      e835ffffff     call fcn.eip
"
run_test

NAME='call fcn rip 64bit'
FILE=../bins/elf/analysis/ls-alxchk
ARGS=
CMDS='
s 0x5e50
e asm.bits=64
af; afn rip
pd 1 @ 0x5f16~:0
e asm.lines=0
e asm.bytes=0
e asm.comments=0
'
EXPECT="            0x00005f16      e835ffffff     call fcn.rip
"
run_test

NAME='lea edx bug segfault for x86 32bit #5710@radare2'
FILE=malloc://128
ARGS=
CMDS='
e asm.arch=x86
e asm.bits=32
e asm.lines=false
e asm.comments=false
pd@x:8d15d0830408
'
EXPECT=" 0x00000000      8d15d0830408   lea edx, [0x80483d0]
"
run_test
