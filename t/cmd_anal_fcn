#!/bin/sh

# GPL 3+ - Copyright (C) 2012  pancake, Edd Barrett, Simon Ruderich

[ -e tests.sh ] && . ./tests.sh || . ../tests.sh

NAME='af x86-32'
FILE=malloc://1024
ARGS=
CMDS='
e asm.arch=x86
e asm.bits=32
wx 6a00 4889e5 c3 
af
afl~[1]
'
EXPECT='6
'
run_test

# test if function analysis works in ujmp
NAME='af x86-32 ujmp eob'
FILE=malloc://1024
BROKEN=
ARGS=
CMDS='
e asm.arch=x86
e asm.bits=32
wx 6a00 4889e5 ff25f8120000 ff25f8120000ffe0
af
afl~[1]
'
EXPECT='19
'
IGNORE_ERR=1
run_test
IGNORE_ERR=0

NAME='af bug'
BROKEN=
FILE=malloc://1024
ARGS=
CMDS='
e asm.arch=x86
e asm.bits=32
wx 6a004889e54883e4f0488b7d08488d751089fa83c201c1e2034801f24889d1eb044883c1084883390075f64883c108e8580f000089c7e81b390000f4554889e5
s +0x40
wx 488d4768488d7e684889c6c9e9013a0000554889e54883c6684883c768c9e9ef390000554889e5534889f1488b5660488b4760488b583048395a307f1d7c2248
s -0x40
af
pif
'
IGNORE_ERR=1
EXPECT='push 0x0
dec eax
mov ebp, esp
dec eax
and esp, 0xfffffff0
dec eax
mov edi, [ebp+0x8]
dec eax
lea esi, [ebp+0x10]
mov edx, edi
add edx, 0x1
shl edx, 0x3
dec eax
add edx, esi
dec eax
mov ecx, edx
jmp 0x6
dec eax
add ecx, 0x8
dec eax
cmp dword [ecx], 0x0
jnz 0xfffffffffffffff8
dec eax
add ecx, 0x8
call dword 0xf5d
mov edi, eax
call dword 0x3920
hlt
'
run_test
IGNORE_ERR=0
