#!/bin/sh
for a in . .. ../.. ; do [ -e $a/tests.sh ] && . $a/tests.sh ; done

# -------------------------------
# CWDE instruction
NAME="x86: [CWDE]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 98
pi 1
'
EXPECT='cwde
'
run_test


# -------------------------------
# CBW instruction
NAME="x86: [CBW]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 6698
pi 1
'
EXPECT='cbw
'
run_test


# -------------------------------
# CDQ instruction
NAME="x86: [CDQ]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 99
pi 1
'
EXPECT='cdq
'
run_test


# -------------------------------
# CWD instruction
NAME="x86: [CWD]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 6699
pi 1
'
EXPECT='cwd
'
run_test


# -------------------------------
# CMC instruction
NAME="x86: [CMC]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx F5
pi 1
'
EXPECT='cmc
'
run_test


# -------------------------------
# STC instruction
NAME="x86: [STC]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx F9
pi 1
'
EXPECT='stc
'
run_test


# -------------------------------
# CLC instruction
NAME="x86: [CLC]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx F8
pi 1
'
EXPECT='clc
'
run_test


# -------------------------------
# CLI instruction
NAME="x86: [CLI]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx FA
pi 1
'
EXPECT='cli
'
run_test


# -------------------------------
# STI instruction
NAME="x86: [STI]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx FB
pi 1
'
EXPECT='sti
'
run_test


# -------------------------------
# CLD instruction
NAME="x86: [CLD]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx FC
pi 1
'
EXPECT='cld
'
run_test


# -------------------------------
# STD instruction
NAME="x86: [STD]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx FD
pi 1
'
EXPECT='std
'
run_test





# -------------------------------
# SALC instruction
NAME="x86: [SALC]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx D6
pi 1
'
EXPECT='salc
'
run_test




# -------------------------------
# XLATB instruction
NAME="x86: [XLATB]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx D7
pi 1
'
EXPECT='xlatb
'
run_test


# -------------------------------
# LEAVE instruction
NAME="x86: [LEAVE]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx C9
pi 1
'
EXPECT='leave
'
run_test


# -------------------------------
# INT1 instruction
NAME="x86: [INT1]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx F1
pi 1
'
EXPECT='int1
'
run_test


# -------------------------------
# INT 1 instruction
NAME="x86: [INT 1]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx CD01
pi 1
'
EXPECT='int 0x1
'
run_test


# -------------------------------
# INT3 instruction
NAME="x86: [INT3]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx CC
pi 1
'
EXPECT='int3
'
run_test


# -------------------------------
# INT 3 instruction
NAME="x86: [INT 3]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx CD03
pi 1
'
EXPECT='int 0x3
'
run_test


# -------------------------------
# INTO instruction
NAME="x86: [INTO]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx CE
pi 1
'
EXPECT='into
'
run_test


# -------------------------------
# IRETD instruction
NAME="x86: [IRETD]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx CF
pi 1
'
EXPECT='iretd
'
run_test


# -------------------------------
# IRETW instruction
NAME="x86: [IRETW]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 66CF
pi 1
'
EXPECT='iretw
'
run_test




# -------------------------------
# RET instruction
NAME="x86: [RET]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx C3
pi 1
'
EXPECT='ret
'
run_test


# -------------------------------
# RETF 01234H instruction
NAME="x86: [RETF 01234H]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx CA
pi 1
'
EXPECT='retf 0x0
'
run_test


# -------------------------------
# RETF instruction
NAME="x86: [RETF]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx cb
pi 1
'
EXPECT='retf
'
run_test


# -------------------------------
# HLT instruction
NAME="x86: [HLT]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx F4
pi 1
'
EXPECT='hlt
'
run_test


# -------------------------------
# LAHF instruction
NAME="x86: [LAHF]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 9F
pi 1
'
EXPECT='lahf
'
run_test


# -------------------------------
# SAHF instruction
NAME="x86: [SAHF]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 9E
pi 1
'
EXPECT='sahf
'
run_test


# -------------------------------
# PUSHFD instruction
NAME="x86: [PUSHFD]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 9C
pi 1
'
EXPECT='pushfd
'
run_test


# -------------------------------
# POPFD instruction
NAME="x86: [POPFD]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 9D
pi 1
'
EXPECT='popfd
'
run_test



# -------------------------------
# PUSHAD instruction
NAME="x86: [PUSHAD]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 60
pi 1
'
EXPECT='pushad
'
run_test


# -------------------------------
# POPAD instruction
NAME="x86: [POPAD]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 61
pi 1
'
EXPECT='popad
'
run_test



# -------------------------------
# POPA instruction
NAME="x86: [POPA]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 6661
pi 1
'
EXPECT='popa
'
run_test


# -------------------------------
# DAA instruction
NAME="x86: [DAA]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 27
pi 1
'
EXPECT='daa
'
run_test


# -------------------------------
# AAA instruction
NAME="x86: [AAA]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 37
pi 1
'
EXPECT='aaa
'
run_test


# -------------------------------
# DAS instruction
NAME="x86: [DAS]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 2F
pi 1
'
EXPECT='das
'
run_test


# -------------------------------
# AAS instruction
NAME="x86: [AAS]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 3F
pi 1
'
EXPECT='aas
'
run_test

# -------------------------------
# PUSH EAX instruction
NAME="x86: [PUSH EAX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 50
pi 1
'
EXPECT='push eax
'
run_test


# -------------------------------
# PUSH ECX instruction
NAME="x86: [PUSH ECX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 51
pi 1
'
EXPECT='push ecx
'
run_test


# -------------------------------
# PUSH EDX instruction
NAME="x86: [PUSH EDX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 52
pi 1
'
EXPECT='push edx
'
run_test


# -------------------------------
# PUSH EBX instruction
NAME="x86: [PUSH EBX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 53
pi 1
'
EXPECT='push ebx
'
run_test


# -------------------------------
# PUSH ESP instruction
NAME="x86: [PUSH ESP]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 54
pi 1
'
EXPECT='push esp
'
run_test


# -------------------------------
# PUSH EBP instruction
NAME="x86: [PUSH EBP]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 55
pi 1
'
EXPECT='push ebp
'
run_test


# -------------------------------
# PUSH ESI instruction
NAME="x86: [PUSH ESI]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 56
pi 1
'
EXPECT='push esi
'
run_test


# -------------------------------
# PUSH EDI instruction
NAME="x86: [PUSH EDI]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 57
pi 1
'
EXPECT='push edi
'
run_test


# -------------------------------
# POP EAX instruction
NAME="x86: [POP EAX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 58
pi 1
'
EXPECT='pop eax
'
run_test


# -------------------------------
# POP ECX instruction
NAME="x86: [POP ECX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 59
pi 1
'
EXPECT='pop ecx
'
run_test


# -------------------------------
# POP EDX instruction
NAME="x86: [POP EDX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 5A
pi 1
'
EXPECT='pop edx
'
run_test


# -------------------------------
# POP EBX instruction
NAME="x86: [POP EBX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 5B
pi 1
'
EXPECT='pop ebx
'
run_test


# -------------------------------
# POP ESP instruction
NAME="x86: [POP ESP]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 5C
pi 1
'
EXPECT='pop esp
'
run_test


# -------------------------------
# POP EBP instruction
NAME="x86: [POP EBP]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 5D
pi 1
'
EXPECT='pop ebp
'
run_test


# -------------------------------
# POP ESI instruction
NAME="x86: [POP ESI]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 5E
pi 1
'
EXPECT='pop esi
'
run_test


# -------------------------------
# POP EDI instruction
NAME="x86: [POP EDI]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 5F
pi 1
'
EXPECT='pop edi
'
run_test


# -------------------------------
# PUSH DWORD [EAX] instruction
NAME="x86: [PUSH DWORD [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx ff30
pi 1
'
EXPECT='push dword [eax]
'
run_test


# -------------------------------
# POP DWORD [EAX] instruction
NAME="x86: [POP DWORD [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 8f00
pi 1
'
EXPECT='pop dword [eax]
'
run_test


# -------------------------------
# PUSH ES instruction
NAME="x86: [PUSH ES]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 06
pi 1
'
EXPECT='push es
'
run_test


# -------------------------------
# PUSH CS instruction
NAME="x86: [PUSH CS]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0E
pi 1
'
EXPECT='push cs
'
run_test


# -------------------------------
# PUSH SS instruction
NAME="x86: [PUSH SS]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 16
pi 1
'
EXPECT='push ss
'
run_test


# -------------------------------
# PUSH DS instruction
NAME="x86: [PUSH DS]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 1E
pi 1
'
EXPECT='push ds
'
run_test


# -------------------------------
# POP ES instruction
NAME="x86: [POP ES]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 07
pi 1
'
EXPECT='pop es
'
run_test


# -------------------------------
# POP SS instruction
NAME="x86: [POP SS]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 17
pi 1
'
EXPECT='pop ss
'
run_test


# -------------------------------
# POP DS instruction
NAME="x86: [POP DS]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 1F
pi 1
'
EXPECT='pop ds
'
run_test


# -------------------------------
# PUSH 0 instruction
NAME="x86: [PUSH 0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 6a00
pi 1
'
EXPECT='push 0x0
'
run_test


# -------------------------------
# PUSH FS instruction
NAME="x86: [PUSH FS]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0fa0
pi 1
'
EXPECT='push fs
'
run_test


# -------------------------------
# POP FS instruction
NAME="x86: [POP FS]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0fa1
pi 1
'
EXPECT='pop fs
'
run_test


# -------------------------------
# PUSH GS instruction
NAME="x86: [PUSH GS]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0fa8
pi 1
'
EXPECT='push gs
'
run_test


# -------------------------------
# POP GS instruction
NAME="x86: [POP GS]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0fa9
pi 1
'
EXPECT='pop gs
'
run_test


# -------------------------------
# INC EAX instruction
NAME="x86: [INC EAX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 40
pi 1
'
EXPECT='inc eax
'
run_test


# -------------------------------
# INC ECX instruction
NAME="x86: [INC ECX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 41
pi 1
'
EXPECT='inc ecx
'
run_test


# -------------------------------
# INC EDX instruction
NAME="x86: [INC EDX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 42
pi 1
'
EXPECT='inc edx
'
run_test


# -------------------------------
# INC EBX instruction
NAME="x86: [INC EBX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 43
pi 1
'
EXPECT='inc ebx
'
run_test


# -------------------------------
# INC ESP instruction
NAME="x86: [INC ESP]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 44
pi 1
'
EXPECT='inc esp
'
run_test


# -------------------------------
# INC EBP instruction
NAME="x86: [INC EBP]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 45
pi 1
'
EXPECT='inc ebp
'
run_test


# -------------------------------
# INC ESI instruction
NAME="x86: [INC ESI]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 46
pi 1
'
EXPECT='inc esi
'
run_test


# -------------------------------
# INC EDI instruction
NAME="x86: [INC EDI]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 47
pi 1
'
EXPECT='inc edi
'
run_test


# -------------------------------
# DEC EAX instruction
NAME="x86: [DEC EAX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 48
pi 1
'
EXPECT='dec eax
'
run_test


# -------------------------------
# DEC ECX instruction
NAME="x86: [DEC ECX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 49
pi 1
'
EXPECT='dec ecx
'
run_test


# -------------------------------
# DEC EDX instruction
NAME="x86: [DEC EDX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 4a
pi 1
'
EXPECT='dec edx
'
run_test


# -------------------------------
# DEC EBX instruction
NAME="x86: [DEC EBX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 4b
pi 1
'
EXPECT='dec ebx
'
run_test


# -------------------------------
# DEC ESP instruction
NAME="x86: [DEC ESP]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 4c
pi 1
'
EXPECT='dec esp
'
run_test


# -------------------------------
# DEC EBP instruction
NAME="x86: [DEC EBP]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 4d
pi 1
'
EXPECT='dec ebp
'
run_test


# -------------------------------
# DEC ESI instruction
NAME="x86: [DEC ESI]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 4e
pi 1
'
EXPECT='dec esi
'
run_test


# -------------------------------
# DEC EDI instruction
NAME="x86: [DEC EDI]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 4f
pi 1
'
EXPECT='dec edi
'
run_test


# -------------------------------
# INC BYTE [EAX] instruction
NAME="x86: [INC BYTE [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx fe00
pi 1
'
EXPECT='inc byte [eax]
'
run_test


# -------------------------------
# INC DWORD [EAX] instruction
NAME="x86: [INC DWORD [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx ff00
pi 1
'
EXPECT='inc dword [eax]
'
run_test


# -------------------------------
# DEC BYTE [EAX] instruction
NAME="x86: [DEC BYTE [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx fe08
pi 1
'
EXPECT='dec byte [eax]
'
run_test


# -------------------------------
# DEC DWORD [EAX] instruction
NAME="x86: [DEC DWORD [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx ff08
pi 1
'
EXPECT='dec dword [eax]
'
run_test

# -------------------------------
# SLDT [EAX] instruction
NAME="x86: [SLDT [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f0000
pi 1
'
EXPECT='sldt word [eax]
'
run_test



# -------------------------------
# STR  [EAX] instruction
NAME="x86: [STR  [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f0008
pi 1
'
EXPECT='str word [eax]
'
run_test



# -------------------------------
# LLDT [EAX] instruction
NAME="x86: [LLDT [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f0010
pi 1
'
EXPECT='lldt word [eax]
'
run_test


# -------------------------------
# LLDT AX instruction
NAME="x86: [LLDT AX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f00d0
pi 1
'
EXPECT='lldt ax
'
run_test


# -------------------------------
# LTR  [EAX] instruction
NAME="x86: [LTR  [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f0018
pi 1
'
EXPECT='ltr word [eax]
'
run_test


# -------------------------------
# LTR  AX instruction
NAME="x86: [LTR  AX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f00d8
pi 1
'
EXPECT='ltr ax
'
run_test


# -------------------------------
# VERR [EAX] instruction
NAME="x86: [VERR [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f0020
pi 1
'
EXPECT='verr word [eax]
'
run_test


# -------------------------------
# VERR AX instruction
NAME="x86: [VERR AX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f00e0
pi 1
'
EXPECT='verr ax
'
run_test


# -------------------------------
# VERW [EAX] instruction
NAME="x86: [VERW [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f0028
pi 1
'
EXPECT='verw word [eax]
'
run_test


# -------------------------------
# VERW AX instruction
NAME="x86: [VERW AX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f00e8
pi 1
'
EXPECT='verw ax
'
run_test


# -------------------------------
# SGDT [EAX] instruction
NAME="x86: [SGDT [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f0100
pi 1
'
EXPECT='sgdt [eax]
'
run_test


# -------------------------------
# SIDT [EAX] instruction
NAME="x86: [SIDT [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f0108
pi 1
'
EXPECT='sidt [eax]
'
run_test


# -------------------------------
# LGDT [EAX] instruction
NAME="x86: [LGDT [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f0110
pi 1
'
EXPECT='lgdt [eax]
'
run_test


# -------------------------------
# LIDT [EAX] instruction
NAME="x86: [LIDT [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f0118
pi 1
'
EXPECT='lidt [eax]
'
run_test


# -------------------------------
# SMSW [EAX] instruction
NAME="x86: [SMSW [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f0120
pi 1
'
EXPECT='smsw word [eax]
'
run_test


# -------------------------------
# LMSW [EAX] instruction
NAME="x86: [LMSW [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f0130
pi 1
'
EXPECT='lmsw word [eax]
'
run_test


# -------------------------------
# INVLPG [EAX] instruction
NAME="x86: [INVLPG [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f0138
pi 1
'
EXPECT='invlpg [eax]
'
run_test