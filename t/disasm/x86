#!/bin/sh
for a in . .. ../.. ; do [ -e $a/tests.sh ] && . $a/tests.sh ; done

# -------------------------------
# CWDE instruction
NAME="x86: [CWDE]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 98
pi 1
'
EXPECT='cwde
'
run_test


# -------------------------------
# CBW instruction
NAME="x86: [CBW]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 6698
pi 1
'
EXPECT='cbw
'
run_test


# -------------------------------
# CDQ instruction
NAME="x86: [CDQ]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 99
pi 1
'
EXPECT='cdq
'
run_test


# -------------------------------
# CWD instruction
NAME="x86: [CWD]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 6699
pi 1
'
EXPECT='cwd
'
run_test


# -------------------------------
# CMC instruction
NAME="x86: [CMC]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx F5
pi 1
'
EXPECT='cmc
'
run_test


# -------------------------------
# STC instruction
NAME="x86: [STC]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx F9
pi 1
'
EXPECT='stc
'
run_test


# -------------------------------
# CLC instruction
NAME="x86: [CLC]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx F8
pi 1
'
EXPECT='clc
'
run_test


# -------------------------------
# CLI instruction
NAME="x86: [CLI]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx FA
pi 1
'
EXPECT='cli
'
run_test


# -------------------------------
# STI instruction
NAME="x86: [STI]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx FB
pi 1
'
EXPECT='sti
'
run_test


# -------------------------------
# CLD instruction
NAME="x86: [CLD]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx FC
pi 1
'
EXPECT='cld
'
run_test


# -------------------------------
# STD instruction
NAME="x86: [STD]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx FD
pi 1
'
EXPECT='std
'
run_test





# -------------------------------
# SALC instruction
NAME="x86: [SALC]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx D6
pi 1
'
EXPECT='salc
'
run_test




# -------------------------------
# XLATB instruction
NAME="x86: [XLATB]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx D7
pi 1
'
EXPECT='xlatb
'
run_test


# -------------------------------
# LEAVE instruction
NAME="x86: [LEAVE]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx C9
pi 1
'
EXPECT='leave
'
run_test


# -------------------------------
# INT1 instruction
NAME="x86: [INT1]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx F1
pi 1
'
EXPECT='int1
'
run_test


# -------------------------------
# INT 1 instruction
NAME="x86: [INT 1]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx CD01
pi 1
'
EXPECT='int 0x1
'
run_test


# -------------------------------
# INT3 instruction
NAME="x86: [INT3]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx CC
pi 1
'
EXPECT='int3
'
run_test


# -------------------------------
# INT 3 instruction
NAME="x86: [INT 3]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx CD03
pi 1
'
EXPECT='int 0x3
'
run_test


# -------------------------------
# INTO instruction
NAME="x86: [INTO]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx CE
pi 1
'
EXPECT='into
'
run_test


# -------------------------------
# IRETD instruction
NAME="x86: [IRETD]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx CF
pi 1
'
EXPECT='iretd
'
run_test


# -------------------------------
# IRETW instruction
NAME="x86: [IRETW]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 66CF
pi 1
'
EXPECT='iretw
'
run_test




# -------------------------------
# RET instruction
NAME="x86: [RET]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx C3
pi 1
'
EXPECT='ret
'
run_test


# -------------------------------
# RETF 0x0 instruction
NAME="x86: [RETF 0x0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx CA00
pi 1
'
EXPECT='retf 0x0
'
run_test


# -------------------------------
# RETF instruction
NAME="x86: [RETF]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx cb
pi 1
'
EXPECT='retf
'
run_test


# -------------------------------
# HLT instruction
NAME="x86: [HLT]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx F4
pi 1
'
EXPECT='hlt
'
run_test


# -------------------------------
# LAHF instruction
NAME="x86: [LAHF]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 9F
pi 1
'
EXPECT='lahf
'
run_test


# -------------------------------
# SAHF instruction
NAME="x86: [SAHF]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 9E
pi 1
'
EXPECT='sahf
'
run_test


# -------------------------------
# PUSHFD instruction
NAME="x86: [PUSHFD]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 9C
pi 1
'
EXPECT='pushfd
'
run_test


# -------------------------------
# POPFD instruction
NAME="x86: [POPFD]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 9D
pi 1
'
EXPECT='popfd
'
run_test



# -------------------------------
# PUSHAD instruction
NAME="x86: [PUSHAD]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 60
pi 1
'
EXPECT='pushad
'
run_test


# -------------------------------
# POPAD instruction
NAME="x86: [POPAD]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 61
pi 1
'
EXPECT='popad
'
run_test



# -------------------------------
# POPA instruction
NAME="x86: [POPA]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 6661
pi 1
'
EXPECT='popa
'
run_test


# -------------------------------
# DAA instruction
NAME="x86: [DAA]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 27
pi 1
'
EXPECT='daa
'
run_test


# -------------------------------
# AAA instruction
NAME="x86: [AAA]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 37
pi 1
'
EXPECT='aaa
'
run_test


# -------------------------------
# DAS instruction
NAME="x86: [DAS]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 2F
pi 1
'
EXPECT='das
'
run_test


# -------------------------------
# AAS instruction
NAME="x86: [AAS]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 3F
pi 1
'
EXPECT='aas
'
run_test

# -------------------------------
# PUSH EAX instruction
NAME="x86: [PUSH EAX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 50
pi 1
'
EXPECT='push eax
'
run_test


# -------------------------------
# PUSH ECX instruction
NAME="x86: [PUSH ECX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 51
pi 1
'
EXPECT='push ecx
'
run_test


# -------------------------------
# PUSH EDX instruction
NAME="x86: [PUSH EDX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 52
pi 1
'
EXPECT='push edx
'
run_test


# -------------------------------
# PUSH EBX instruction
NAME="x86: [PUSH EBX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 53
pi 1
'
EXPECT='push ebx
'
run_test


# -------------------------------
# PUSH ESP instruction
NAME="x86: [PUSH ESP]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 54
pi 1
'
EXPECT='push esp
'
run_test


# -------------------------------
# PUSH EBP instruction
NAME="x86: [PUSH EBP]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 55
pi 1
'
EXPECT='push ebp
'
run_test


# -------------------------------
# PUSH ESI instruction
NAME="x86: [PUSH ESI]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 56
pi 1
'
EXPECT='push esi
'
run_test


# -------------------------------
# PUSH EDI instruction
NAME="x86: [PUSH EDI]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 57
pi 1
'
EXPECT='push edi
'
run_test


# -------------------------------
# POP EAX instruction
NAME="x86: [POP EAX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 58
pi 1
'
EXPECT='pop eax
'
run_test


# -------------------------------
# POP ECX instruction
NAME="x86: [POP ECX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 59
pi 1
'
EXPECT='pop ecx
'
run_test


# -------------------------------
# POP EDX instruction
NAME="x86: [POP EDX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 5A
pi 1
'
EXPECT='pop edx
'
run_test


# -------------------------------
# POP EBX instruction
NAME="x86: [POP EBX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 5B
pi 1
'
EXPECT='pop ebx
'
run_test


# -------------------------------
# POP ESP instruction
NAME="x86: [POP ESP]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 5C
pi 1
'
EXPECT='pop esp
'
run_test


# -------------------------------
# POP EBP instruction
NAME="x86: [POP EBP]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 5D
pi 1
'
EXPECT='pop ebp
'
run_test


# -------------------------------
# POP ESI instruction
NAME="x86: [POP ESI]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 5E
pi 1
'
EXPECT='pop esi
'
run_test


# -------------------------------
# POP EDI instruction
NAME="x86: [POP EDI]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 5F
pi 1
'
EXPECT='pop edi
'
run_test


# -------------------------------
# PUSH DWORD [EAX] instruction
NAME="x86: [PUSH DWORD [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx ff30
pi 1
'
EXPECT='push dword [eax]
'
run_test


# -------------------------------
# POP DWORD [EAX] instruction
NAME="x86: [POP DWORD [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 8f00
pi 1
'
EXPECT='pop dword [eax]
'
run_test


# -------------------------------
# PUSH ES instruction
NAME="x86: [PUSH ES]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 06
pi 1
'
EXPECT='push es
'
run_test


# -------------------------------
# PUSH CS instruction
NAME="x86: [PUSH CS]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0E
pi 1
'
EXPECT='push cs
'
run_test


# -------------------------------
# PUSH SS instruction
NAME="x86: [PUSH SS]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 16
pi 1
'
EXPECT='push ss
'
run_test


# -------------------------------
# PUSH DS instruction
NAME="x86: [PUSH DS]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 1E
pi 1
'
EXPECT='push ds
'
run_test


# -------------------------------
# POP ES instruction
NAME="x86: [POP ES]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 07
pi 1
'
EXPECT='pop es
'
run_test


# -------------------------------
# POP SS instruction
NAME="x86: [POP SS]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 17
pi 1
'
EXPECT='pop ss
'
run_test


# -------------------------------
# POP DS instruction
NAME="x86: [POP DS]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 1F
pi 1
'
EXPECT='pop ds
'
run_test


# -------------------------------
# PUSH 0 instruction
NAME="x86: [PUSH 0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 6a00
pi 1
'
EXPECT='push 0x0
'
run_test


# -------------------------------
# PUSH FS instruction
NAME="x86: [PUSH FS]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0fa0
pi 1
'
EXPECT='push fs
'
run_test


# -------------------------------
# POP FS instruction
NAME="x86: [POP FS]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0fa1
pi 1
'
EXPECT='pop fs
'
run_test


# -------------------------------
# PUSH GS instruction
NAME="x86: [PUSH GS]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0fa8
pi 1
'
EXPECT='push gs
'
run_test


# -------------------------------
# POP GS instruction
NAME="x86: [POP GS]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0fa9
pi 1
'
EXPECT='pop gs
'
run_test


# -------------------------------
# INC EAX instruction
NAME="x86: [INC EAX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 40
pi 1
'
EXPECT='inc eax
'
run_test


# -------------------------------
# INC ECX instruction
NAME="x86: [INC ECX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 41
pi 1
'
EXPECT='inc ecx
'
run_test


# -------------------------------
# INC EDX instruction
NAME="x86: [INC EDX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 42
pi 1
'
EXPECT='inc edx
'
run_test


# -------------------------------
# INC EBX instruction
NAME="x86: [INC EBX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 43
pi 1
'
EXPECT='inc ebx
'
run_test


# -------------------------------
# INC ESP instruction
NAME="x86: [INC ESP]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 44
pi 1
'
EXPECT='inc esp
'
run_test


# -------------------------------
# INC EBP instruction
NAME="x86: [INC EBP]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 45
pi 1
'
EXPECT='inc ebp
'
run_test


# -------------------------------
# INC ESI instruction
NAME="x86: [INC ESI]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 46
pi 1
'
EXPECT='inc esi
'
run_test


# -------------------------------
# INC EDI instruction
NAME="x86: [INC EDI]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 47
pi 1
'
EXPECT='inc edi
'
run_test


# -------------------------------
# DEC EAX instruction
NAME="x86: [DEC EAX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 48
pi 1
'
EXPECT='dec eax
'
run_test


# -------------------------------
# DEC ECX instruction
NAME="x86: [DEC ECX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 49
pi 1
'
EXPECT='dec ecx
'
run_test


# -------------------------------
# DEC EDX instruction
NAME="x86: [DEC EDX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 4a
pi 1
'
EXPECT='dec edx
'
run_test


# -------------------------------
# DEC EBX instruction
NAME="x86: [DEC EBX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 4b
pi 1
'
EXPECT='dec ebx
'
run_test


# -------------------------------
# DEC ESP instruction
NAME="x86: [DEC ESP]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 4c
pi 1
'
EXPECT='dec esp
'
run_test


# -------------------------------
# DEC EBP instruction
NAME="x86: [DEC EBP]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 4d
pi 1
'
EXPECT='dec ebp
'
run_test


# -------------------------------
# DEC ESI instruction
NAME="x86: [DEC ESI]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 4e
pi 1
'
EXPECT='dec esi
'
run_test


# -------------------------------
# DEC EDI instruction
NAME="x86: [DEC EDI]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 4f
pi 1
'
EXPECT='dec edi
'
run_test


# -------------------------------
# INC BYTE [EAX] instruction
NAME="x86: [INC BYTE [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx fe00
pi 1
'
EXPECT='inc byte [eax]
'
run_test


# -------------------------------
# INC DWORD [EAX] instruction
NAME="x86: [INC DWORD [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx ff00
pi 1
'
EXPECT='inc dword [eax]
'
run_test


# -------------------------------
# DEC BYTE [EAX] instruction
NAME="x86: [DEC BYTE [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx fe08
pi 1
'
EXPECT='dec byte [eax]
'
run_test


# -------------------------------
# DEC DWORD [EAX] instruction
NAME="x86: [DEC DWORD [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx ff08
pi 1
'
EXPECT='dec dword [eax]
'
run_test

# -------------------------------
# SLDT [EAX] instruction
NAME="x86: [SLDT [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f0000
pi 1
'
EXPECT='sldt word [eax]
'
run_test



# -------------------------------
# STR  [EAX] instruction
NAME="x86: [STR  [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f0008
pi 1
'
EXPECT='str word [eax]
'
run_test



# -------------------------------
# LLDT [EAX] instruction
NAME="x86: [LLDT [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f0010
pi 1
'
EXPECT='lldt word [eax]
'
run_test


# -------------------------------
# LLDT AX instruction
NAME="x86: [LLDT AX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f00d0
pi 1
'
EXPECT='lldt ax
'
run_test


# -------------------------------
# LTR  [EAX] instruction
NAME="x86: [LTR  [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f0018
pi 1
'
EXPECT='ltr word [eax]
'
run_test


# -------------------------------
# LTR  AX instruction
NAME="x86: [LTR  AX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f00d8
pi 1
'
EXPECT='ltr ax
'
run_test


# -------------------------------
# VERR [EAX] instruction
NAME="x86: [VERR [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f0020
pi 1
'
EXPECT='verr word [eax]
'
run_test


# -------------------------------
# VERR AX instruction
NAME="x86: [VERR AX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f00e0
pi 1
'
EXPECT='verr ax
'
run_test


# -------------------------------
# VERW [EAX] instruction
NAME="x86: [VERW [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f0028
pi 1
'
EXPECT='verw word [eax]
'
run_test


# -------------------------------
# VERW AX instruction
NAME="x86: [VERW AX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f00e8
pi 1
'
EXPECT='verw ax
'
run_test


# -------------------------------
# SGDT [EAX] instruction
NAME="x86: [SGDT [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f0100
pi 1
'
EXPECT='sgdt [eax]
'
run_test


# -------------------------------
# SIDT [EAX] instruction
NAME="x86: [SIDT [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f0108
pi 1
'
EXPECT='sidt [eax]
'
run_test


# -------------------------------
# LGDT [EAX] instruction
NAME="x86: [LGDT [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f0110
pi 1
'
EXPECT='lgdt [eax]
'
run_test


# -------------------------------
# LIDT [EAX] instruction
NAME="x86: [LIDT [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f0118
pi 1
'
EXPECT='lidt [eax]
'
run_test


# -------------------------------
# SMSW [EAX] instruction
NAME="x86: [SMSW [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f0120
pi 1
'
EXPECT='smsw word [eax]
'
run_test


# -------------------------------
# LMSW [EAX] instruction
NAME="x86: [LMSW [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f0130
pi 1
'
EXPECT='lmsw word [eax]
'
run_test


# -------------------------------
# INVLPG [EAX] instruction
NAME="x86: [INVLPG [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f0138
pi 1
'
EXPECT='invlpg [eax]
'
run_test

# -------------------------------
# MOV AL,0 instruction
NAME="x86: [MOV AL,0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx B000
pi 1
'
EXPECT='mov al, 0x0
'
run_test


# -------------------------------
# MOV CL,0 instruction
NAME="x86: [MOV CL,0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx B100
pi 1
'
EXPECT='mov cl, 0x0
'
run_test


# -------------------------------
# MOV DL,0 instruction
NAME="x86: [MOV DL,0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx B200
pi 1
'
EXPECT='mov dl, 0x0
'
run_test


# -------------------------------
# MOV BL,0 instruction
NAME="x86: [MOV BL,0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx B300
pi 1
'
EXPECT='mov bl, 0x0
'
run_test


# -------------------------------
# MOV AH,0 instruction
NAME="x86: [MOV AH,0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx B400
pi 1
'
EXPECT='mov ah, 0x0
'
run_test


# -------------------------------
# MOV CH,0 instruction
NAME="x86: [MOV CH,0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx B500
pi 1
'
EXPECT='mov ch, 0x0
'
run_test


# -------------------------------
# MOV DH,0 instruction
NAME="x86: [MOV DH,0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx B600
pi 1
'
EXPECT='mov dh, 0x0
'
run_test


# -------------------------------
# MOV BH,0 instruction
NAME="x86: [MOV BH,0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx B700
pi 1
'
EXPECT='mov bh, 0x0
'
run_test


# -------------------------------
# TEST AL,0 instruction
NAME="x86: [TEST AL,0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx A8
pi 1
'
EXPECT='test al, 0x0
'
run_test


# -------------------------------
# IN AL,0 instruction
NAME="x86: [IN AL,0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx E4
pi 1
'
EXPECT='in al, 0x0
'
run_test


# -------------------------------
# IN EAX,0 instruction
NAME="x86: [IN EAX,0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx E5
pi 1
'
EXPECT='in eax, 0x0
'
run_test


# -------------------------------
# IN AL,DX instruction
NAME="x86: [IN AL,DX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx ec
pi 1
'
EXPECT='in al, dx
'
run_test


# -------------------------------
# IN EAX,DX instruction
NAME="x86: [IN EAX,DX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx ed
pi 1
'
EXPECT='in eax, dx
'
run_test

# -------------------------------
# OUT 0X0, AL instruction
NAME="x86: [OUT 0X0, AL]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx E600
pi 1
'
EXPECT='out 0x0, al
'
run_test


# -------------------------------
# OUT 0X0, EAX instruction
NAME="x86: [OUT 0X0, EAX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx E700
pi 1
'
EXPECT='out 0x0, eax
'
run_test


# -------------------------------
# OUT DX, AL instruction
NAME="x86: [OUT DX, AL]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx ee
pi 1
'
EXPECT='out dx, al
'
run_test


# -------------------------------
# OUT DX, EAX instruction
NAME="x86: [OUT DX, EAX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx ef
pi 1
'
EXPECT='out dx, eax
'
run_test

# -------------------------------
# CPUID instruction
NAME="x86: [CPUID]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0fa2
pi 1
'
EXPECT='cpuid
'
run_test


# -------------------------------
# PUSHFS instruction
NAME="x86: [PUSHFS]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0fa0
pi 1
'
EXPECT='push fs
'
run_test


# -------------------------------
# POP FS instruction
NAME="x86: [POP FS]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0fa1
pi 1
'
EXPECT='pop fs
'
run_test


# -------------------------------
# PUSHGS instruction
NAME="x86: [PUSHGS]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0fa8
pi 1
'
EXPECT='push gs
'
run_test


# -------------------------------
# POP GS instruction
NAME="x86: [POP GS]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0fa9
pi 1
'
EXPECT='pop gs
'
run_test


# -------------------------------
# INVD instruction
NAME="x86: [INVD]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f08
pi 1
'
EXPECT='invd
'
run_test


# -------------------------------
# WBINVD instruction
NAME="x86: [WBINVD]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f09
pi 1
'
EXPECT='wbinvd
'
run_test


# -------------------------------
# VMCALL instruction
BROKEN=1
NAME="x86: [VMCALL]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f01c1
pi 1
'
EXPECT='vmcall
'
run_test


# -------------------------------
# VMLAUNCH instruction
BROKEN=1
NAME="x86: [VMLAUNCH]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f01c2
pi 1
'
EXPECT='vmlaunch
'
run_test


# -------------------------------
# VMRESUME instruction
BROKEN=1
NAME="x86: [VMRESUME]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f01c3
pi 1
'
EXPECT='vmresume
'
run_test


# -------------------------------
# VMXOFF instruction
BROKEN=1
NAME="x86: [VMXOFF]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f01c4
pi 1
'
EXPECT='vmxoff
'
run_test


# -------------------------------
# MONITOR instruction
NAME="x86: [MONITOR]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f01c8
pi 1
'
EXPECT='monitor
'
run_test


# -------------------------------
# MWAIT instruction
NAME="x86: [MWAIT]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f01c9
pi 1
'
EXPECT='mwait
'
run_test


# -------------------------------
# XGETBV instruction
NAME="x86: [XGETBV]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f01d0
pi 1
'
EXPECT='xgetbv
'
run_test


# -------------------------------
# XSETBV instruction
NAME="x86: [XSETBV]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f01d1
pi 1
'
EXPECT='xsetbv
'
run_test


# -------------------------------
# VMRUN instruction
NAME="x86: [VMRUN]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f01d8
pi 1
'
EXPECT='vmrun
'
run_test


# -------------------------------
# VMMCALL instruction
NAME="x86: [VMMCALL]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f01d9
pi 1
'
EXPECT='vmmcall
'
run_test


# -------------------------------
# VMLOAD instruction
NAME="x86: [VMLOAD]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f01da
pi 1
'
EXPECT='vmload
'
run_test


# -------------------------------
# VMSAVE instruction
NAME="x86: [VMSAVE]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f01db
pi 1
'
EXPECT='vmsave
'
run_test


# -------------------------------
# STGI instruction
NAME="x86: [STGI]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f01dc
pi 1
'
EXPECT='stgi
'
run_test


# -------------------------------
# CLGI instruction
NAME="x86: [CLGI]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f01dd
pi 1
'
EXPECT='clgi
'
run_test


# -------------------------------
# SKINIT instruction
NAME="x86: [SKINIT]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f01de
pi 1
'
EXPECT='skinit
'
run_test


# -------------------------------
# INVLPGA instruction
NAME="x86: [INVLPGA]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f01df
pi 1
'
EXPECT='invlpga
'
run_test


# -------------------------------
# PAUSE instruction
NAME="x86: [PAUSE]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx f390
pi 1
'
EXPECT='pause
'
run_test


# -------------------------------
# RDTSCP instruction
NAME="x86: [RDTSCP]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f01f9
pi 1
'
EXPECT='rdtscp
'
run_test


# -------------------------------
# LAR EAX, [EAX] instruction
NAME="x86: [LAR EAX, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f02
pi 1
'
EXPECT='lar eax, word [eax]
'
run_test


# -------------------------------
# LSL EAX, [EAX] instruction
NAME="x86: [LSL EAX, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f03
pi 1
'
EXPECT='lsl eax, word [eax]
'
run_test

# -------------------------------
# CLTS instruction
NAME="x86: [CLTS]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f06
pi 1
'
EXPECT='clts
'
run_test


# -------------------------------
# SYSRET instruction
NAME="x86: [SYSRET]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f07
pi 1
'
EXPECT='sysret
'
run_test

# -------------------------------
# EMMS instruction
NAME="x86: [EMMS]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f77
pi 1
'
EXPECT='emms
'
run_test


# -------------------------------
# FEMMS instruction
NAME="x86: [FEMMS]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f0e
pi 1
'
EXPECT='femms
'
run_test


# -------------------------------
# CPUID instruction
NAME="x86: [CPUID]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0fa2
pi 1
'
EXPECT='cpuid
'
run_test


# -------------------------------
# RSM instruction
NAME="x86: [RSM]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0faa
pi 1
'
EXPECT='rsm
'
run_test


# -------------------------------
# UD2 instruction
NAME="x86: [UD2]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f0b
pi 1
'
EXPECT='ud2
'
run_test


# -------------------------------
# GETSEC instruction
NAME="x86: [GETSEC]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f37h
pi 1
'
EXPECT='getsec
'
run_test


# -------------------------------
# MOVUPS XMM0, [EAX] instruction
NAME="x86: [MOVUPS XMM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f10
pi 1
'
EXPECT='movups xmm0, [eax]
'
run_test


# -------------------------------
# MOVUPS [EAX], XMM0 instruction
NAME="x86: [MOVUPS [EAX], XMM0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f11
pi 1
'
EXPECT='movups [eax], xmm0
'
run_test


# -------------------------------
# UNPCKLPS XMM0, [EAX] instruction
NAME="x86: [UNPCKLPS XMM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f14
pi 1
'
EXPECT='unpcklps xmm0, [eax]
'
run_test


# -------------------------------
# UNPCKHPS XMM0, [EAX] instruction
NAME="x86: [UNPCKHPS XMM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f15
pi 1
'
EXPECT='unpckhps xmm0, [eax]
'
run_test


# -------------------------------
# MOVLPS XMM0, [EAX] instruction
NAME="x86: [MOVLPS XMM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f12
pi 1
'
EXPECT='movlps xmm0, [eax]
'
run_test


# -------------------------------
# MOVLPS [EAX], XMM0 instruction
NAME="x86: [MOVLPS [EAX], XMM0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f13
pi 1
'
EXPECT='movlps [eax], xmm0
'
run_test


# -------------------------------
# MOVHLPS XMM0, XMM0 instruction
BROKEN=1
NAME="x86: [MOVHLPS XMM0, XMM0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f12
pi 1
'
EXPECT='movhlps xmm0, xmm0
'
run_test


# -------------------------------
# MOVLHPS XMM0, XMM0 instruction
BROKEN=1
NAME="x86: [MOVLHPS XMM0, XMM0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f16
pi 1
'
EXPECT='movlhps xmm0, xmm0
'
run_test


# -------------------------------
# MOVHPS XMM0, [EAX] instruction
NAME="x86: [MOVHPS XMM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f16
pi 1
'
EXPECT='movhps xmm0, [eax]
'
run_test


# -------------------------------
# MOVHPS [EAX], XMM0 instruction
NAME="x86: [MOVHPS [EAX], XMM0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f17
pi 1
'
EXPECT='movhps [eax], xmm0
'
run_test


# -------------------------------
# MOV EAX, CR0 instruction
BROKEN=1
NAME="x86: [MOV EAX, CR0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f20
pi 1
'
EXPECT='mov eax, cr0
'
run_test


# -------------------------------
# MOV EAX, DR0 instruction
BROKEN=1
NAME="x86: [MOV EAX, DR0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f21
pi 1
'
EXPECT='mov eax, dr0
'
run_test


# -------------------------------
# MOV CR0, EAX instruction
BROKEN=1
NAME="x86: [MOV CR0, EAX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f22 
pi 1
'
EXPECT='mov cr0, eax
'
run_test


# -------------------------------
# MOV DR0, EAX instruction
BROKEN=1
NAME="x86: [MOV DR0, EAX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f23
pi 1
'
EXPECT='mov dr0, eax
'
run_test


# -------------------------------
# MOVMSKPS EAX, XMM0 instruction
NAME="x86: [MOVMSKPS EAX, XMM0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f50c0
pi 1
'
EXPECT='movmskps eax, xmm0
'
run_test


# -------------------------------
# MOVMSKPD EAX, XMM0 instruction
NAME="x86: [MOVMSKPD EAX, XMM0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f50c0
pi 1
'
EXPECT='movmskpd eax, xmm0
'
run_test


# -------------------------------
# JO 0x2 instruction
NAME="x86: [JO 0x2]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 70 00
pi 1
'
EXPECT='jo 0x2
'
run_test


# -------------------------------
# JNO 0x2 instruction
NAME="x86: [JNO 0x2]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 71 00
pi 1
'
EXPECT='jno 0x2
'
run_test


# -------------------------------
# JB  0x2 instruction
NAME="x86: [JB  0x2]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 72 00
pi 1
'
EXPECT='jb 0x2
'
run_test


# -------------------------------
# JAE 0x2 instruction
NAME="x86: [JAE 0x2]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 73 00
pi 1
'
EXPECT='jae 0x2
'
run_test


# -------------------------------
# JZ  0x2 instruction
NAME="x86: [JZ  0x2]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 74 00
pi 1
'
EXPECT='jz 0x2
'
run_test


# -------------------------------
# JNZ 0x2 instruction
NAME="x86: [JNZ 0x2]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 75 00
pi 1
'
EXPECT='jnz 0x2
'
run_test


# -------------------------------
# JBE 0x2 instruction
NAME="x86: [JBE 0x2]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 76 00
pi 1
'
EXPECT='jbe 0x2
'
run_test


# -------------------------------
# JA  0x2 instruction
NAME="x86: [JA  0x2]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 77 00
pi 1
'
EXPECT='ja 0x2
'
run_test


# -------------------------------
# JS  0x2 instruction
NAME="x86: [JS  0x2]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 78 00
pi 1
'
EXPECT='js 0x2
'
run_test


# -------------------------------
# JNS 0x2 instruction
NAME="x86: [JNS 0x2]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 79 00
pi 1
'
EXPECT='jns 0x2
'
run_test


# -------------------------------
# JP  0x2 instruction
NAME="x86: [JP  0x2]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 7a 00
pi 1
'
EXPECT='jp 0x2
'
run_test


# -------------------------------
# JNP 0x2 instruction
NAME="x86: [JNP 0x2]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 7b 00
pi 1
'
EXPECT='jnp 0x2
'
run_test


# -------------------------------
# JL  0x2 instruction
NAME="x86: [JL  0x2]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 7c 00
pi 1
'
EXPECT='jl 0x2
'
run_test


# -------------------------------
# JGE 0x2 instruction
NAME="x86: [JGE 0x2]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 7d 00
pi 1
'
EXPECT='jge 0x2
'
run_test


# -------------------------------
# JLE 0x2 instruction
NAME="x86: [JLE 0x2]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 7e 00
pi 1
'
EXPECT='jle 0x2
'
run_test


# -------------------------------
# JG  0x2 instruction
NAME="x86: [JG  0x2]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 7f 00
pi 1
'
EXPECT='jg 0x2
'
run_test


# -------------------------------
# JO  0x6 instruction
NAME="x86: [JO  0x6]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f80 00000000
pi 1
'
EXPECT='jo 0x6
'
run_test


# -------------------------------
# JNO 0x6 instruction
NAME="x86: [JNO 0x6]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f81 00000000
pi 1
'
EXPECT='jno 0x6
'
run_test


# -------------------------------
# JB  0x6 instruction
NAME="x86: [JB  0x6]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f82 00000000
pi 1
'
EXPECT='jb 0x6
'
run_test


# -------------------------------
# JAE 0x6 instruction
NAME="x86: [JAE 0x6]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f83 00000000
pi 1
'
EXPECT='jae 0x6
'
run_test


# -------------------------------
# JZ  0x6 instruction
NAME="x86: [JZ  0x6]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f84 00000000
pi 1
'
EXPECT='jz 0x6
'
run_test


# -------------------------------
# JNZ 0x6 instruction
NAME="x86: [JNZ 0x6]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f85 00000000
pi 1
'
EXPECT='jnz 0x6
'
run_test


# -------------------------------
# JBE 0x6 instruction
NAME="x86: [JBE 0x6]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f86 00000000
pi 1
'
EXPECT='jbe 0x6
'
run_test


# -------------------------------
# JA  0x6 instruction
NAME="x86: [JA  0x6]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f87 00000000
pi 1
'
EXPECT='ja 0x6
'
run_test


# -------------------------------
# JS  0x6 instruction
NAME="x86: [JS  0x6]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f88 00000000
pi 1
'
EXPECT='js 0x6
'
run_test


# -------------------------------
# JNS 0x6 instruction
NAME="x86: [JNS 0x6]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f89 00000000
pi 1
'
EXPECT='jns 0x6
'
run_test


# -------------------------------
# JP  0x6 instruction
NAME="x86: [JP  0x6]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f8a 00000000
pi 1
'
EXPECT='jp 0x6
'
run_test


# -------------------------------
# JNP 0x6 instruction
NAME="x86: [JNP 0x6]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f8b 00000000
pi 1
'
EXPECT='jnp 0x6
'
run_test


# -------------------------------
# JL  0x6 instruction
NAME="x86: [JL  0x6]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f8c 00000000
pi 1
'
EXPECT='jl 0x6
'
run_test


# -------------------------------
# JGE 0x6 instruction
NAME="x86: [JGE 0x6]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f8d 00000000
pi 1
'
EXPECT='jge 0x6
'
run_test


# -------------------------------
# JLE 0x6 instruction
NAME="x86: [JLE 0x6]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f8e 00000000
pi 1
'
EXPECT='jle 0x6
'
run_test


# -------------------------------
# JG  0x6 instruction
NAME="x86: [JG  0x6]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f8f 00000000
pi 1
'
EXPECT='jg 0x6
'
run_test

# -------------------------------
# SETO [EAX] instruction
NAME="x86: [SETO [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f9000
pi 1
'
EXPECT='o16 seto byte [eax]
'
run_test


# -------------------------------
# SETNO [EAX] instruction
NAME="x86: [SETNO [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f9100
pi 1
'
EXPECT='o16 setno byte [eax]
'
run_test


# -------------------------------
# SETB [EAX] instruction
NAME="x86: [SETB [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f9200
pi 1
'
EXPECT='o16 setb byte [eax]
'
run_test


# -------------------------------
# SETAE [EAX] instruction
NAME="x86: [SETAE [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f9300
pi 1
'
EXPECT='o16 setae byte [eax]
'
run_test


# -------------------------------
# SETZ [EAX] instruction
NAME="x86: [SETZ [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f9400
pi 1
'
EXPECT='o16 setz byte [eax]
'
run_test


# -------------------------------
# SETNZ [EAX] instruction
NAME="x86: [SETNZ [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f9500
pi 1
'
EXPECT='o16 setnz byte [eax]
'
run_test


# -------------------------------
# SETBE [EAX] instruction
NAME="x86: [SETBE [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f9600
pi 1
'
EXPECT='o16 setbe byte [eax]
'
run_test


# -------------------------------
# SETA [EAX] instruction
NAME="x86: [SETA [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f9700
pi 1
'
EXPECT='o16 seta byte [eax]
'
run_test


# -------------------------------
# SETS [EAX] instruction
NAME="x86: [SETS [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f9800
pi 1
'
EXPECT='o16 sets byte [eax]
'
run_test


# -------------------------------
# SETNS [EAX] instruction
NAME="x86: [SETNS [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f9900
pi 1
'
EXPECT='o16 setns byte [eax]
'
run_test


# -------------------------------
# SETP [EAX] instruction
NAME="x86: [SETP [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f9a00
pi 1
'
EXPECT='o16 setp byte [eax]
'
run_test


# -------------------------------
# SETNP [EAX] instruction
NAME="x86: [SETNP [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f9b00
pi 1
'
EXPECT='o16 setnp byte [eax]
'
run_test


# -------------------------------
# SETL [EAX] instruction
NAME="x86: [SETL [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f9c00
pi 1
'
EXPECT='o16 setl byte [eax]
'
run_test


# -------------------------------
# SETGE [EAX] instruction
NAME="x86: [SETGE [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f9d00
pi 1
'
EXPECT='o16 setge byte [eax]
'
run_test


# -------------------------------
# SETLE [EAX] instruction
NAME="x86: [SETLE [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f9e00
pi 1
'
EXPECT='o16 setle byte [eax]
'
run_test


# -------------------------------
# SETG [EAX] instruction
NAME="x86: [SETG [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f9f00
pi 1
'
EXPECT='o16 setg byte [eax]
'
run_test


# -------------------------------
# CMOVO EAX, [EAX] instruction
NAME="x86: [CMOVO EAX, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f4000
pi 1
'
EXPECT='cmovo eax, [eax]
'
run_test


# -------------------------------
# CMOVNO EAX, [EAX] instruction
NAME="x86: [CMOVNO EAX, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f4100
pi 1
'
EXPECT='cmovno eax, [eax]
'
run_test


# -------------------------------
# CMOVB EAX, [EAX] instruction
NAME="x86: [CMOVB EAX, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f4200
pi 1
'
EXPECT='cmovb eax, [eax]
'
run_test


# -------------------------------
# CMOVAE EAX, [EAX] instruction
NAME="x86: [CMOVAE EAX, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f4300
pi 1
'
EXPECT='cmovae eax, [eax]
'
run_test


# -------------------------------
# CMOVZ EAX, [EAX] instruction
NAME="x86: [CMOVZ EAX, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f4400
pi 1
'
EXPECT='cmovz eax, [eax]
'
run_test


# -------------------------------
# CMOVNZ EAX, [EAX] instruction
NAME="x86: [CMOVNZ EAX, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f4500
pi 1
'
EXPECT='cmovnz eax, [eax]
'
run_test


# -------------------------------
# CMOVBE EAX, [EAX] instruction
NAME="x86: [CMOVBE EAX, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f4600
pi 1
'
EXPECT='cmovbe eax, [eax]
'
run_test


# -------------------------------
# CMOVA EAX, [EAX] instruction
NAME="x86: [CMOVA EAX, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f4700
pi 1
'
EXPECT='cmova eax, [eax]
'
run_test


# -------------------------------
# CMOVS EAX, [EAX] instruction
NAME="x86: [CMOVS EAX, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f4800
pi 1
'
EXPECT='cmovs eax, [eax]
'
run_test


# -------------------------------
# CMOVNS EAX, [EAX] instruction
NAME="x86: [CMOVNS EAX, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f4900
pi 1
'
EXPECT='cmovns eax, [eax]
'
run_test


# -------------------------------
# CMOVP EAX, [EAX] instruction
NAME="x86: [CMOVP EAX, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f4a00
pi 1
'
EXPECT='cmovp eax, [eax]
'
run_test


# -------------------------------
# CMOVNP EAX, [EAX] instruction
NAME="x86: [CMOVNP EAX, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f4b00
pi 1
'
EXPECT='cmovnp eax, [eax]
'
run_test


# -------------------------------
# CMOVL EAX, [EAX] instruction
NAME="x86: [CMOVL EAX, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f4c00
pi 1
'
EXPECT='cmovl eax, [eax]
'
run_test


# -------------------------------
# CMOVGE EAX, [EAX] instruction
NAME="x86: [CMOVGE EAX, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f4d00
pi 1
'
EXPECT='cmovge eax, [eax]
'
run_test


# -------------------------------
# CMOVLE EAX, [EAX] instruction
NAME="x86: [CMOVLE EAX, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f4e00
pi 1
'
EXPECT='cmovle eax, [eax]
'
run_test


# -------------------------------
# CMOVG EAX, [EAX] instruction
NAME="x86: [CMOVG EAX, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f4f00
pi 1
'
EXPECT='cmovg eax, [eax]
'
run_test

# -------------------------------
# MOV AL, [EAX] instruction
NAME="x86: [MOV AL, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 8a00
pi 1
'
EXPECT='mov al, [eax]
'
run_test


# -------------------------------
# MOV EAX, [EAX] instruction
NAME="x86: [MOV EAX, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 8b00
pi 1
'
EXPECT='mov eax, [eax]
'
run_test


# -------------------------------
# MOV [EAX], ES instruction
NAME="x86: [MOV [EAX], ES]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 8c00
pi 1
'
EXPECT='mov [eax], es
'
run_test


# -------------------------------
# MOV ES, [EAX] instruction
NAME="x86: [MOV ES, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 8e00
pi 1
'
EXPECT='mov es, [eax]
'
run_test


# -------------------------------
# LEA EAX, [EAX] instruction
NAME="x86: [LEA EAX, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 8d00
pi 1
'
EXPECT='lea eax, [eax]
'
run_test


# -------------------------------
# POP DWORD [EAX] instruction
NAME="x86: [POP DWORD [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 8f00
pi 1
'
EXPECT='pop dword [eax]
'
run_test


# -------------------------------
# NOP instruction
NAME="x86: [NOP]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 90
pi 1
'
EXPECT='nop
'
run_test


# -------------------------------
# XCHG ECX, EAX instruction
NAME="x86: [XCHG ECX, EAX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 91
pi 1
'
EXPECT='xchg ecx, eax
'
run_test


# -------------------------------
# XCHG EDX, EAX instruction
NAME="x86: [XCHG EDX, EAX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 92
pi 1
'
EXPECT='xchg edx, eax
'
run_test


# -------------------------------
# XCHG EBX, EAX instruction
NAME="x86: [XCHG EBX, EAX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 93
pi 1
'
EXPECT='xchg ebx, eax
'
run_test


# -------------------------------
# XCHG ESP, EAX instruction
NAME="x86: [XCHG ESP, EAX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 94
pi 1
'
EXPECT='xchg esp, eax
'
run_test


# -------------------------------
# XCHG EBP, EAX instruction
NAME="x86: [XCHG EBP, EAX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 95
pi 1
'
EXPECT='xchg ebp, eax
'
run_test


# -------------------------------
# XCHG ESI, EAX instruction
NAME="x86: [XCHG ESI, EAX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 96
pi 1
'
EXPECT='xchg esi, eax
'
run_test


# -------------------------------
# XCHG EDI, EAX instruction
NAME="x86: [XCHG EDI, EAX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 97
pi 1
'
EXPECT='xchg edi, eax
'
run_test


# -------------------------------
# MOVSB instruction
NAME="x86: [MOVSB]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx a4
pi 1
'
EXPECT='movsb
'
run_test



# -------------------------------
# MOVSD instruction
NAME="x86: [MOVSD]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx a5
pi 1
'
EXPECT='movsd
'
run_test


# -------------------------------
# CMPSB instruction
NAME="x86: [CMPSB]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx a6
pi 1
'
EXPECT='cmpsb
'
run_test



# -------------------------------
# CMPSD instruction
NAME="x86: [CMPSD]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx a7
pi 1
'
EXPECT='cmpsd
'
run_test


# -------------------------------
# STOSB instruction
NAME="x86: [STOSB]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx aa
pi 1
'
EXPECT='stosb
'
run_test


# -------------------------------
# STOSD instruction
NAME="x86: [STOSD]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx ab
pi 1
'
EXPECT='stosd
'
run_test


# -------------------------------
# LODSB instruction
NAME="x86: [LODSB]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx ac
pi 1
'
EXPECT='lodsb
'
run_test


# -------------------------------
# LODSD instruction
NAME="x86: [LODSD]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx ad
pi 1
'
EXPECT='lodsd
'
run_test


# -------------------------------
# SCASB instruction
NAME="x86: [SCASB]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx ae
pi 1
'
EXPECT='scasb
'
run_test


# -------------------------------
# SCASD instruction
NAME="x86: [SCASD]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx af
pi 1
'
EXPECT='scasd
'
run_test


# -------------------------------
# PREFETCH [EAX] instruction
NAME="x86: [PREFETCH [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f0d00
pi 1
'
EXPECT='prefetch [eax]
'
run_test


# -------------------------------
# PREFETCHNTA [EAX] instruction
NAME="x86: [PREFETCHNTA [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f1800
pi 1
'
EXPECT='prefetchnta [eax]
'
run_test


# -------------------------------
# PREFETCHT0 [EAX] instruction
NAME="x86: [PREFETCHT0 [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f18 08
pi 1
'
EXPECT='prefetcht0 [eax]
'
run_test


# -------------------------------
# PREFETCHT1 [EAX] instruction
NAME="x86: [PREFETCHT1 [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f18 10
pi 1
'
EXPECT='prefetcht1 [eax]
'
run_test


# -------------------------------
# PREFETCHT2 [EAX] instruction
NAME="x86: [PREFETCHT2 [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f18 18
pi 1
'
EXPECT='prefetcht2 [eax]
'
run_test


# -------------------------------
# SYSCALL instruction
NAME="x86: [SYSCALL]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f05
pi 1
'
EXPECT='syscall
'
run_test

# -------------------------------
# WRMSR instruction
NAME="x86: [WRMSR]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f30
pi 1
'
EXPECT='wrmsr
'
run_test


# -------------------------------
# RDTSC instruction
NAME="x86: [RDTSC]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f31
pi 1
'
EXPECT='rdtsc
'
run_test


# -------------------------------
# RDMSR instruction
NAME="x86: [RDMSR]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f32
pi 1
'
EXPECT='rdmsr
'
run_test


# -------------------------------
# RDPMC instruction
NAME="x86: [RDPMC]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f33
pi 1
'
EXPECT='rdpmc
'
run_test


# -------------------------------
# SYSENTER instruction
NAME="x86: [SYSENTER]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f34
pi 1
'
EXPECT='sysenter
'
run_test


# -------------------------------
# SYSEXIT instruction
NAME="x86: [SYSEXIT]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f35
pi 1
'
EXPECT='sysexit
'
run_test


# -------------------------------
# CRC32 EAX, BYTE [EAX] instruction
NAME="x86: [CRC32 EAX, BYTE [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx f20f38f0
pi 1
'
EXPECT='crc32 eax, byte [eax]
'
run_test


# -------------------------------
# CRC32 EAX, [EAX] instruction
NAME="x86: [CRC32 EAX, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx f20f38f1
pi 1
'
EXPECT='crc32 eax, [eax]
'
run_test


# -------------------------------
# SQRTPS XMM0, [EAX] instruction
NAME="x86: [SQRTPS XMM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f5100
pi 1
'
EXPECT='sqrtps xmm0, [eax]
'
run_test


# -------------------------------
# SQRTPD XMM0, [EAX] instruction
NAME="x86: [SQRTPD XMM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f5100
pi 1
'
EXPECT='sqrtpd xmm0, [eax]
'
run_test


# -------------------------------
# SQRTSD XMM0, [EAX] instruction
NAME="x86: [SQRTSD XMM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx f20f5100
pi 1
'
EXPECT='sqrtsd xmm0, [eax]
'
run_test


# -------------------------------
# SQRTSS XMM0, [EAX] instruction
NAME="x86: [SQRTSS XMM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx f30f5100
pi 1
'
EXPECT='sqrtss xmm0, [eax]
'
run_test


# -------------------------------
# RSQRTPS XMM0, [EAX] instruction
NAME="x86: [RSQRTPS XMM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f5200
pi 1
'
EXPECT='rsqrtps xmm0, [eax]
'
run_test


# -------------------------------
# RSQRTSS XMM0, [EAX] instruction
NAME="x86: [RSQRTSS XMM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx f30f5200
pi 1
'
EXPECT='rsqrtss xmm0, [eax]
'
run_test

# -------------------------------
# RCPPS XMM0, [EAX] instruction
NAME="x86: [RCPPS XMM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f5300
pi 1
'
EXPECT='rcpps xmm0, [eax]
'
run_test


# -------------------------------
# RCPSS XMM0, [EAX] instruction
NAME="x86: [RCPSS XMM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx f30f5300
pi 1
'
EXPECT='rcpss xmm0, [eax]
'
run_test


# -------------------------------
# ANDPS XMM0, [EAX] instruction
NAME="x86: [ANDPS XMM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f5400
pi 1
'
EXPECT='andps xmm0, [eax]
'
run_test


# -------------------------------
# ANDNPS XMM0, [EAX] instruction
NAME="x86: [ANDNPS XMM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f5500
pi 1
'
EXPECT='andnps xmm0, [eax]
'
run_test


# -------------------------------
# ANDPD XMM0, [EAX] instruction
NAME="x86: [ANDPD XMM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f54
pi 1
'
EXPECT='andpd xmm0, [eax]
'
run_test


# -------------------------------
# ANDNPD XMM0, [EAX] instruction
NAME="x86: [ANDNPD XMM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f55
pi 1
'
EXPECT='andnpd xmm0, [eax]
'
run_test


# -------------------------------
# ORPS XMM0, [EAX] instruction
NAME="x86: [ORPS XMM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f5600
pi 1
'
EXPECT='orps xmm0, [eax]
'
run_test


# -------------------------------
# XORPS XMM0, [EAX] instruction
NAME="x86: [XORPS XMM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f5700
pi 1
'
EXPECT='xorps xmm0, [eax]
'
run_test


# -------------------------------
# ORPD XMM0, [EAX] instruction
NAME="x86: [ORPD XMM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f5600
pi 1
'
EXPECT='orpd xmm0, [eax]
'
run_test


# -------------------------------
# XORPD XMM0, [EAX] instruction
NAME="x86: [XORPD XMM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f5700
pi 1
'
EXPECT='xorpd xmm0, [eax]
'
run_test

# -------------------------------
# ADDPS XMM0, [EAX] instruction
NAME="x86: [ADDPS XMM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f5800
pi 1
'
EXPECT='addps xmm0, [eax]
'
run_test


# -------------------------------
# SUBPS XMM0, [EAX] instruction
NAME="x86: [SUBPS XMM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f5c00
pi 1
'
EXPECT='subps xmm0, [eax]
'
run_test


# -------------------------------
# MULPS XMM0, [EAX] instruction
NAME="x86: [MULPS XMM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f5900
pi 1
'
EXPECT='mulps xmm0, [eax]
'
run_test


# -------------------------------
# DIVPS XMM0, [EAX] instruction
NAME="x86: [DIVPS XMM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f5e00
pi 1
'
EXPECT='divps xmm0, [eax]
'
run_test


# -------------------------------
# ADDPD XMM0, [EAX] instruction
NAME="x86: [ADDPD XMM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f5800
pi 1
'
EXPECT='addpd xmm0, [eax]
'
run_test


# -------------------------------
# SUBPD XMM0, [EAX] instruction
NAME="x86: [SUBPD XMM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f5c00
pi 1
'
EXPECT='subpd xmm0, [eax]
'
run_test


# -------------------------------
# MULPD XMM0, [EAX] instruction
NAME="x86: [MULPD XMM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f5900
pi 1
'
EXPECT='mulpd xmm0, [eax]
'
run_test


# -------------------------------
# DIVPD XMM0, [EAX] instruction
NAME="x86: [DIVPD XMM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f5e00
pi 1
'
EXPECT='divpd xmm0, [eax]
'
run_test


# -------------------------------
# MINPS XMM0, [EAX] instruction
NAME="x86: [MINPS XMM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f5d00
pi 1
'
EXPECT='minps xmm0, [eax]
'
run_test


# -------------------------------
# MAXPS XMM0, [EAX] instruction
NAME="x86: [MAXPS XMM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f5f00
pi 1
'
EXPECT='maxps xmm0, [eax]
'
run_test


# -------------------------------
# MINPD XMM0, [EAX] instruction
NAME="x86: [MINPD XMM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f5d00
pi 1
'
EXPECT='minpd xmm0, [eax]
'
run_test


# -------------------------------
# MAXPD XMM0, [EAX] instruction
NAME="x86: [MAXPD XMM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f5f00
pi 1
'
EXPECT='maxpd xmm0, [eax]
'
run_test


# -------------------------------
# MINSD XMM0, QWORD [EAX] instruction
NAME="x86: [MINSD XMM0, QWORD [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx f20f5d00
pi 1
'
EXPECT='minsd xmm0, qword [eax]
'
run_test


# -------------------------------
# MAXSD XMM0, [EAX] instruction
NAME="x86: [MAXSD XMM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx f20f5f00
pi 1
'
EXPECT='maxsd xmm0, [eax]
'
run_test


# -------------------------------
# MINSS XMM0, DWORD [EAX] instruction
NAME="x86: [MINSS XMM0, DWORD [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx f30f5d00
pi 1
'
EXPECT='minss xmm0, dword [eax]
'
run_test


# -------------------------------
# MAXSS XMM0, [EAX] instruction
NAME="x86: [MAXSS XMM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx f30f5f00
pi 1
'
EXPECT='maxss xmm0, [eax]
'
run_test


# -------------------------------
# PUNPCKLBW MM0, [EAX] instruction
NAME="x86: [PUNPCKLBW MM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f6000
pi 1
'
EXPECT='punpcklbw mm0, [eax]
'
run_test


# -------------------------------
# PUNPCKLWD MM0, [EAX] instruction
NAME="x86: [PUNPCKLWD MM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f6100
pi 1
'
EXPECT='punpcklwd mm0, [eax]
'
run_test


# -------------------------------
# PUNPCKLDQ MM0, [EAX] instruction
NAME="x86: [PUNPCKLDQ MM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f6200
pi 1
'
EXPECT='punpckldq mm0, [eax]
'
run_test


# -------------------------------
# PUNPCKLBW XMM0, [EAX] instruction
NAME="x86: [PUNPCKLBW XMM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f6000
pi 1
'
EXPECT='punpcklbw xmm0, [eax]
'
run_test


# -------------------------------
# PUNPCKLWD XMM0, [EAX] instruction
NAME="x86: [PUNPCKLWD XMM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f6100
pi 1
'
EXPECT='punpcklwd xmm0, [eax]
'
run_test


# -------------------------------
# PUNPCKLDQ XMM0, [EAX] instruction
NAME="x86: [PUNPCKLDQ XMM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f6200
pi 1
'
EXPECT='punpckldq xmm0, [eax]
'
run_test


# -------------------------------
# PACKSSWB MM0, [EAX] instruction
NAME="x86: [PACKSSWB MM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f6300
pi 1
'
EXPECT='packsswb mm0, [eax]
'
run_test


# -------------------------------
# PACKUSWB MM0, [EAX] instruction
NAME="x86: [PACKUSWB MM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f6700
pi 1
'
EXPECT='packuswb mm0, [eax]
'
run_test


# -------------------------------
# PACKSSWB XMM0, [EAX] instruction
NAME="x86: [PACKSSWB XMM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f6300
pi 1
'
EXPECT='packsswb xmm0, [eax]
'
run_test


# -------------------------------
# PACKUSWB XMM0, [EAX] instruction
NAME="x86: [PACKUSWB XMM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f6700
pi 1
'
EXPECT='packuswb xmm0, [eax]
'
run_test


# -------------------------------
# PCMPGTB MM0, [EAX] instruction
NAME="x86: [PCMPGTB MM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f6400
pi 1
'
EXPECT='pcmpgtb mm0, [eax]
'
run_test


# -------------------------------
# PCMPGTW MM0, [EAX] instruction
NAME="x86: [PCMPGTW MM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f6500
pi 1
'
EXPECT='pcmpgtw mm0, [eax]
'
run_test


# -------------------------------
# PCMPGTD MM0, [EAX] instruction
NAME="x86: [PCMPGTD MM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f6600
pi 1
'
EXPECT='pcmpgtd mm0, [eax]
'
run_test


# -------------------------------
# PCMPGTB XMM0, [EAX] instruction
NAME="x86: [PCMPGTB XMM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f6400
pi 1
'
EXPECT='pcmpgtb xmm0, [eax]
'
run_test


# -------------------------------
# PCMPGTW XMM0, [EAX] instruction
NAME="x86: [PCMPGTW XMM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f6500
pi 1
'
EXPECT='pcmpgtw xmm0, [eax]
'
run_test


# -------------------------------
# PCMPGTD XMM0, [EAX] instruction
NAME="x86: [PCMPGTD XMM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f6600
pi 1
'
EXPECT='pcmpgtd xmm0, [eax]
'
run_test


# -------------------------------
# PUNPCKHBW MM0, [EAX] instruction
NAME="x86: [PUNPCKHBW MM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f6800
pi 1
'
EXPECT='punpckhbw mm0, [eax]
'
run_test


# -------------------------------
# PUNPCKHWD MM0, [EAX] instruction
NAME="x86: [PUNPCKHWD MM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f6900
pi 1
'
EXPECT='punpckhwd mm0, [eax]
'
run_test


# -------------------------------
# PUNPCKHDQ MM0, [EAX] instruction
NAME="x86: [PUNPCKHDQ MM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f6a00
pi 1
'
EXPECT='punpckhdq mm0, [eax]
'
run_test


# -------------------------------
# PUNPCKHBW XMM0, [EAX] instruction
NAME="x86: [PUNPCKHBW XMM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f6800
pi 1
'
EXPECT='punpckhbw xmm0, [eax]
'
run_test


# -------------------------------
# PUNPCKHWD XMM0, [EAX] instruction
NAME="x86: [PUNPCKHWD XMM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f6900
pi 1
'
EXPECT='punpckhwd xmm0, [eax]
'
run_test


# -------------------------------
# PUNPCKHDQ XMM0, [EAX] instruction
NAME="x86: [PUNPCKHDQ XMM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f6a00
pi 1
'
EXPECT='punpckhdq xmm0, [eax]
'
run_test


# -------------------------------
# PACKSSDW MM0, [EAX] instruction
NAME="x86: [PACKSSDW MM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f6b00
pi 1
'
EXPECT='packssdw mm0, [eax]
'
run_test


# -------------------------------
# PACKSSDW XMM0, [EAX] instruction
NAME="x86: [PACKSSDW XMM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f6b00
pi 1
'
EXPECT='packssdw xmm0, [eax]
'
run_test


# -------------------------------
# PSHUFB MM0, [EAX] instruction
NAME="x86: [PSHUFB MM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f380000
pi 1
'
EXPECT='pshufb mm0, [eax]
'
run_test


# -------------------------------
# PSHUFW MM0, [EAX], 0X0 instruction
NAME="x86: [PSHUFW MM0, [EAX], 0X0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f700000
pi 1
'
EXPECT='pshufw mm0, [eax], 0x0
'
run_test


# -------------------------------
# PSHUFB XMM0, [EAX] instruction
NAME="x86: [PSHUFB XMM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f380000
pi 1
'
EXPECT='pshufb xmm0, [eax]
'
run_test


# -------------------------------
# PSHUFD XMM0, [EAX], 0X0 instruction
NAME="x86: [PSHUFD XMM0, [EAX], 0X0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f700000
pi 1
'
EXPECT='pshufd xmm0, [eax], 0x0
'
run_test


# -------------------------------
# PSHUFLW XMM0, [EAX], 0X0 instruction
NAME="x86: [PSHUFLW XMM0, [EAX], 0X0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx f20f700000
pi 1
'
EXPECT='pshuflw xmm0, [eax], 0x0
'
run_test


# -------------------------------
# PSHUFHW XMM0, [EAX], 0X0 instruction
NAME="x86: [PSHUFHW XMM0, [EAX], 0X0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx f30f7000 00
pi 1
'
EXPECT='pshufhw xmm0, [eax], 0x0
'
run_test


# -------------------------------
# PCMPEQB MM0, [EAX] instruction
NAME="x86: [PCMPEQB MM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f7400
pi 1
'
EXPECT='pcmpeqb mm0, [eax]
'
run_test


# -------------------------------
# PCMPEQW MM0, [EAX] instruction
NAME="x86: [PCMPEQW MM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f7500
pi 1
'
EXPECT='pcmpeqw mm0, [eax]
'
run_test


# -------------------------------
# PCMPEQD MM0, [EAX] instruction
NAME="x86: [PCMPEQD MM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f7600
pi 1
'
EXPECT='pcmpeqd mm0, [eax]
'
run_test


# -------------------------------
# PCMPEQB XMM0, [EAX] instruction
NAME="x86: [PCMPEQB XMM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f7400
pi 1
'
EXPECT='pcmpeqb xmm0, [eax]
'
run_test


# -------------------------------
# PCMPEQW XMM0, [EAX] instruction
NAME="x86: [PCMPEQW XMM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f7500
pi 1
'
EXPECT='pcmpeqw xmm0, [eax]
'
run_test


# -------------------------------
# PCMPEQD XMM0, [EAX] instruction
NAME="x86: [PCMPEQD XMM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f7600
pi 1
'
EXPECT='pcmpeqd xmm0, [eax]
'
run_test


# -------------------------------
# MOVD MM0, DWORD [EAX] instruction
NAME="x86: [MOVD MM0, DWORD [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f6e00
pi 1
'
EXPECT='movd mm0, dword [eax]
'
run_test


# -------------------------------
# MOVQ MM0, [EAX] instruction
NAME="x86: [MOVQ MM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f6f00
pi 1
'
EXPECT='movq mm0, [eax]
'
run_test


# -------------------------------
# MOVD DWORD [EAX], MM0 instruction
NAME="x86: [MOVD DWORD [EAX], MM0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f7e00
pi 1
'
EXPECT='movd dword [eax], mm0
'
run_test


# -------------------------------
# MOVQ [EAX], MM0 instruction
NAME="x86: [MOVQ [EAX], MM0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f7f00
pi 1
'
EXPECT='movq [eax], mm0
'
run_test


# -------------------------------
# MOVD XMM0, DWORD [EAX] instruction
NAME="x86: [MOVD XMM0, DWORD [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f6e00
pi 1
'
EXPECT='movd xmm0, dword [eax]
'
run_test


# -------------------------------
# MOVDQA XMM0, [EAX] instruction
NAME="x86: [MOVDQA XMM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f6f00
pi 1
'
EXPECT='movdqa xmm0, [eax]
'
run_test


# -------------------------------
# MOVD DWORD [EAX], XMM0 instruction
NAME="x86: [MOVD DWORD [EAX], XMM0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f7e00
pi 1
'
EXPECT='movd dword [eax], xmm0
'
run_test


# -------------------------------
# MOVDQA [EAX], XMM0 instruction
NAME="x86: [MOVDQA [EAX], XMM0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f7f00
pi 1
'
EXPECT='movdqa [eax], xmm0
'
run_test


# -------------------------------
# MOVDQU XMM0, [EAX] instruction
NAME="x86: [MOVDQU XMM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx f30f6f00
pi 1
'
EXPECT='movdqu xmm0, [eax]
'
run_test


# -------------------------------
# MOVQ XMM0, [EAX] instruction
NAME="x86: [MOVQ XMM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx f30f7e00
pi 1
'
EXPECT='movq xmm0, [eax]
'
run_test


# -------------------------------
# MOVDQU [EAX], XMM0 instruction
NAME="x86: [MOVDQU [EAX], XMM0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx f30f7f00
pi 1
'
EXPECT='movdqu [eax], xmm0
'
run_test

# -------------------------------
# BT [EAX], EAX instruction
NAME="x86: [BT [EAX], EAX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0fa300
pi 1
'
EXPECT='bt [eax], eax
'
run_test


# -------------------------------
# BTS [EAX], EAX instruction
NAME="x86: [BTS [EAX], EAX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0fab00
pi 1
'
EXPECT='bts [eax], eax
'
run_test


# -------------------------------
# BTR [EAX], EAX instruction
NAME="x86: [BTR [EAX], EAX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0fb300
pi 1
'
EXPECT='btr [eax], eax
'
run_test


# -------------------------------
# SHLD [EAX], EAX, 0X0 instruction
NAME="x86: [SHLD [EAX], EAX, 0X0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0fa400 00
pi 1
'
EXPECT='shld [eax], eax, 0x0
'
run_test


# -------------------------------
# SHLD [EAX], EAX, CL instruction
NAME="x86: [SHLD [EAX], EAX, CL]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0fa500
pi 1
'
EXPECT='shld [eax], eax, cl
'
run_test


# -------------------------------
# SHRD [EAX], EAX, 0X0 instruction
NAME="x86: [SHRD [EAX], EAX, 0X0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0fac00 00
pi 1
'
EXPECT='shrd [eax], eax, 0x0
'
run_test


# -------------------------------
# SHRD [EAX], EAX, CL instruction
NAME="x86: [SHRD [EAX], EAX, CL]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0fad00
pi 1
'
EXPECT='shrd [eax], eax, cl
'
run_test

# -------------------------------
# BSWAP EAX instruction
NAME="x86: [BSWAP EAX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0fc8
pi 1
'
EXPECT='bswap eax
'
run_test


# -------------------------------
# BSWAP ECX instruction
NAME="x86: [BSWAP ECX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0fc9
pi 1
'
EXPECT='bswap ecx
'
run_test


# -------------------------------
# BSWAP EDX instruction
NAME="x86: [BSWAP EDX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0fca
pi 1
'
EXPECT='bswap edx
'
run_test


# -------------------------------
# BSWAP EBX instruction
NAME="x86: [BSWAP EBX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0fcb
pi 1
'
EXPECT='bswap ebx
'
run_test


# -------------------------------
# BSWAP ESP instruction
NAME="x86: [BSWAP ESP]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0fcc
pi 1
'
EXPECT='bswap esp
'
run_test


# -------------------------------
# BSWAP EBP instruction
NAME="x86: [BSWAP EBP]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0fcd
pi 1
'
EXPECT='bswap ebp
'
run_test


# -------------------------------
# BSWAP ESI instruction
NAME="x86: [BSWAP ESI]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0fce
pi 1
'
EXPECT='bswap esi
'
run_test


# -------------------------------
# BSWAP EDI instruction
NAME="x86: [BSWAP EDI]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0fcf
pi 1
'
EXPECT='bswap edi
'
run_test


# -------------------------------
# INSB instruction
NAME="x86: [INSB]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 6c
pi 1
'
EXPECT='insb
'
run_test


# -------------------------------
# INSD instruction
NAME="x86: [INSD]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 6d
pi 1
'
EXPECT='insd
'
run_test


# -------------------------------
# OUTSB instruction
NAME="x86: [OUTSB]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 6e
pi 1
'
EXPECT='outsb
'
run_test


# -------------------------------
# OUTSD instruction
NAME="x86: [OUTSD]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 6f
pi 1
'
EXPECT='outsd
'
run_test


# -------------------------------
# MFENCE instruction
NAME="x86: [MFENCE]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0faef0
pi 1
'
EXPECT='mfence
'
run_test


# -------------------------------
# LFENCE instruction
NAME="x86: [LFENCE]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0faee8
pi 1
'
EXPECT='lfence
'
run_test


# -------------------------------
# SFENCE instruction
NAME="x86: [SFENCE]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0faef8
pi 1
'
EXPECT='sfence
'
run_test


# -------------------------------
# SMSW AX instruction
NAME="x86: [SMSW AX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f01e0
pi 1
'
EXPECT='smsw ax
'
run_test


# -------------------------------
# SMSW EAX instruction
NAME="x86: [SMSW EAX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f01e0
pi 1
'
EXPECT='smsw eax
'
run_test


# -------------------------------
# LMSW AX instruction
NAME="x86: [LMSW AX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f01f0
pi 1
'
EXPECT='lmsw ax
'
run_test


# -------------------------------
# FXSAVE [EAX] instruction
NAME="x86: [FXSAVE [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0fae00
pi 1
'
EXPECT='fxsave [eax]
'
run_test


# -------------------------------
# FXRSTOR [EAX] instruction
NAME="x86: [FXRSTOR [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0fae08
pi 1
'
EXPECT='fxrstor [eax]
'
run_test


# -------------------------------
# LDMXCSR [EAX] instruction
NAME="x86: [LDMXCSR [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0fae10
pi 1
'
EXPECT='ldmxcsr dword [eax]
'
run_test


# -------------------------------
# STMXCSR [EAX] instruction
NAME="x86: [STMXCSR [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0fae18
pi 1
'
EXPECT='stmxcsr dword [eax]
'
run_test


# -------------------------------
# XSAVE [EAX] instruction
NAME="x86: [XSAVE [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0fae20
pi 1
'
EXPECT='xsave [eax]
'
run_test


# -------------------------------
# XRSTOR [EAX] instruction
NAME="x86: [XRSTOR [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0fae28
pi 1
'
EXPECT='xrstor [eax]
'
run_test


# -------------------------------
# CLFLUSH [EAX] instruction
NAME="x86: [CLFLUSH [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0fae38
pi 1
'
EXPECT='clflush [eax]
'
run_test


# -------------------------------
# TEST BYTE [EAX], 0 instruction
NAME="x86: [TEST BYTE [EAX], 0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx f60000
pi 1
'
EXPECT='test byte [eax], 0x0
'
run_test


# -------------------------------
# TEST BYTE [EAX], 0 instruction
NAME="x86: [TEST BYTE [EAX], 0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx f60800
pi 1
'
EXPECT='test byte [eax], 0x0
'
run_test


# -------------------------------
# NOT BYTE [EAX] instruction
NAME="x86: [NOT BYTE [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx f610
pi 1
'
EXPECT='not byte [eax]
'
run_test


# -------------------------------
# NEG BYTE [EAX] instruction
NAME="x86: [NEG BYTE [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx f618
pi 1
'
EXPECT='neg byte [eax]
'
run_test


# -------------------------------
# MUL BYTE [EAX] instruction
NAME="x86: [MUL BYTE [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx f620
pi 1
'
EXPECT='mul byte [eax]
'
run_test


# -------------------------------
# IMUL BYTE [EAX] instruction
NAME="x86: [IMUL BYTE [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx f628
pi 1
'
EXPECT='imul byte [eax]
'
run_test


# -------------------------------
# DIV BYTE [EAX] instruction
NAME="x86: [DIV BYTE [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx f630
pi 1
'
EXPECT='div byte [eax]
'
run_test


# -------------------------------
# IDIV BYTE [EAX] instruction
NAME="x86: [IDIV BYTE [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx f638
pi 1
'
EXPECT='idiv byte [eax]
'
run_test


# -------------------------------
# TEST DWORD [EAX], 0 instruction
NAME="x86: [TEST DWORD [EAX], 0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx f70000
pi 1
'
EXPECT='test dword [eax], 0x0
'
run_test


# -------------------------------
# TEST DWORD [EAX], 0 instruction
NAME="x86: [TEST DWORD [EAX], 0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx f70800
pi 1
'
EXPECT='test dword [eax], 0x0
'
run_test


# -------------------------------
# VZEROALL instruction
NAME="x86: [VZEROALL]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx c5fc77
pi 1
'
EXPECT='vzeroall
'
run_test


# -------------------------------
# VZEROUPPER instruction
NAME="x86: [VZEROUPPER]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx c5f877
pi 1
'
EXPECT='vzeroupper
'
run_test

# -------------------------------
# PMOVSXBW XMM0, XMM0 instruction
NAME="x86: [PMOVSXBW XMM0, XMM0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f3820c0
pi 1
'
EXPECT='pmovsxbw xmm0, xmm0
'
run_test


# -------------------------------
# PMOVSXBD XMM0, XMM0 instruction
NAME="x86: [PMOVSXBD XMM0, XMM0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f3821c0
pi 1
'
EXPECT='pmovsxbd xmm0, xmm0
'
run_test


# -------------------------------
# PMOVSXBQ XMM0, XMM0 instruction
NAME="x86: [PMOVSXBQ XMM0, XMM0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f3822c0
pi 1
'
EXPECT='pmovsxbq xmm0, xmm0
'
run_test


# -------------------------------
# PMOVSXWD XMM0, XMM0 instruction
NAME="x86: [PMOVSXWD XMM0, XMM0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f3823c0
pi 1
'
EXPECT='pmovsxwd xmm0, xmm0
'
run_test


# -------------------------------
# PMOVSXWQ XMM0, XMM0 instruction
NAME="x86: [PMOVSXWQ XMM0, XMM0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f3824c0
pi 1
'
EXPECT='pmovsxwq xmm0, xmm0
'
run_test


# -------------------------------
# PMOVSXDQ XMM0, XMM0 instruction
NAME="x86: [PMOVSXDQ XMM0, XMM0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f3825c0
pi 1
'
EXPECT='pmovsxdq xmm0, xmm0
'
run_test


# -------------------------------
# PMOVZXBW XMM0, XMM0 instruction
NAME="x86: [PMOVZXBW XMM0, XMM0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f3830c0
pi 1
'
EXPECT='pmovzxbw xmm0, xmm0
'
run_test


# -------------------------------
# PMOVZXBD XMM0, XMM0 instruction
NAME="x86: [PMOVZXBD XMM0, XMM0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f3831c0
pi 1
'
EXPECT='pmovzxbd xmm0, xmm0
'
run_test


# -------------------------------
# PMOVZXBQ XMM0, XMM0 instruction
NAME="x86: [PMOVZXBQ XMM0, XMM0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f3832c0
pi 1
'
EXPECT='pmovzxbq xmm0, xmm0
'
run_test


# -------------------------------
# PMOVZXWD XMM0, XMM0 instruction
NAME="x86: [PMOVZXWD XMM0, XMM0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f3833c0
pi 1
'
EXPECT='pmovzxwd xmm0, xmm0
'
run_test


# -------------------------------
# PMOVZXWQ XMM0, XMM0 instruction
NAME="x86: [PMOVZXWQ XMM0, XMM0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f3834c0
pi 1
'
EXPECT='pmovzxwq xmm0, xmm0
'
run_test


# -------------------------------
# PMOVZXDQ XMM0, XMM0 instruction
NAME="x86: [PMOVZXDQ XMM0, XMM0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f3835c0
pi 1
'
EXPECT='pmovzxdq xmm0, xmm0
'
run_test


# -------------------------------
# PMINSB XMM0, XMM0 instruction
NAME="x86: [PMINSB XMM0, XMM0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f3838c0
pi 1
'
EXPECT='pminsb xmm0, xmm0
'
run_test


# -------------------------------
# PMINSD XMM0, XMM0 instruction
NAME="x86: [PMINSD XMM0, XMM0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f3839c0
pi 1
'
EXPECT='pminsd xmm0, xmm0
'
run_test


# -------------------------------
# PMINUW XMM0, XMM0 instruction
NAME="x86: [PMINUW XMM0, XMM0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f383ac0
pi 1
'
EXPECT='pminuw xmm0, xmm0
'
run_test


# -------------------------------
# PMINUD XMM0, XMM0 instruction
NAME="x86: [PMINUD XMM0, XMM0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f383bc0
pi 1
'
EXPECT='pminud xmm0, xmm0
'
run_test


# -------------------------------
# PMAXSB XMM0, XMM0 instruction
NAME="x86: [PMAXSB XMM0, XMM0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f383cc0
pi 1
'
EXPECT='pmaxsb xmm0, xmm0
'
run_test


# -------------------------------
# PMAXSD XMM0, XMM0 instruction
NAME="x86: [PMAXSD XMM0, XMM0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f383dc0
pi 1
'
EXPECT='pmaxsd xmm0, xmm0
'
run_test


# -------------------------------
# PMAXUW XMM0, XMM0 instruction
NAME="x86: [PMAXUW XMM0, XMM0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f383ec0
pi 1
'
EXPECT='pmaxuw xmm0, xmm0
'
run_test


# -------------------------------
# PMAXUD XMM0, XMM0 instruction
NAME="x86: [PMAXUD XMM0, XMM0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f383fc0
pi 1
'
EXPECT='pmaxud xmm0, xmm0
'
run_test


# -------------------------------
# PSIGNB XMM0, XMM0 instruction
NAME="x86: [PSIGNB XMM0, XMM0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f3808c0
pi 1
'
EXPECT='psignb xmm0, xmm0
'
run_test


# -------------------------------
# PSIGNW XMM0, XMM0 instruction
NAME="x86: [PSIGNW XMM0, XMM0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f3809c0
pi 1
'
EXPECT='psignw xmm0, xmm0
'
run_test


# -------------------------------
# PSIGND XMM0, XMM0 instruction
NAME="x86: [PSIGND XMM0, XMM0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f380ac0
pi 1
'
EXPECT='psignd xmm0, xmm0
'
run_test


# -------------------------------
# PMULHRSW XMM0, XMM0 instruction
NAME="x86: [PMULHRSW XMM0, XMM0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f380bc0
pi 1
'
EXPECT='pmulhrsw xmm0, xmm0
'
run_test


# -------------------------------
# PABSB XMM0, XMM0 instruction
NAME="x86: [PABSB XMM0, XMM0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f381cc0
pi 1
'
EXPECT='pabsb xmm0, xmm0
'
run_test


# -------------------------------
# PABSW XMM0, XMM0 instruction
NAME="x86: [PABSW XMM0, XMM0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f381dc0
pi 1
'
EXPECT='pabsw xmm0, xmm0
'
run_test


# -------------------------------
# PABSD XMM0, XMM0 instruction
NAME="x86: [PABSD XMM0, XMM0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f381ec0
pi 1
'
EXPECT='pabsd xmm0, xmm0
'
run_test


# -------------------------------
# PMULDQ XMM0, XMM0 instruction
NAME="x86: [PMULDQ XMM0, XMM0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f3828c0
pi 1
'
EXPECT='pmuldq xmm0, xmm0
'
run_test


# -------------------------------
# PCMPEQQ XMM0, XMM0 instruction
NAME="x86: [PCMPEQQ XMM0, XMM0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f3829c0
pi 1
'
EXPECT='pcmpeqq xmm0, xmm0
'
run_test


# -------------------------------
# MOVNTDQA XMM0, [EAX] instruction
NAME="x86: [MOVNTDQA XMM0, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f382a00
pi 1
'
EXPECT='movntdqa xmm0, [eax]
'
run_test


# -------------------------------
# PACKUSDW XMM0, XMM0 instruction
NAME="x86: [PACKUSDW XMM0, XMM0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f382bc0
pi 1
'
EXPECT='packusdw xmm0, xmm0
'
run_test


# -------------------------------
# EXTRACTPS EAX, XMM0, 0 instruction
NAME="x86: [EXTRACTPS EAX, XMM0, 0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f3a17c000
pi 1
'
EXPECT='extractps eax, xmm0, 0x0
'
run_test


# -------------------------------
# PINSRB XMM0, EAX, 0 instruction
NAME="x86: [PINSRB XMM0, EAX, 0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f3a20c000
pi 1
'
EXPECT='pinsrb xmm0, eax, 0x0
'
run_test


# -------------------------------
# INSERTPS XMM0, XMM0, 0 instruction
BROKEN=1
NAME="x86: [INSERTPS XMM0, XMM0, 0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f3a21c000
pi 1
'
EXPECT='insertps xmm0, xmm0, 0x0
'
run_test


# -------------------------------
# DPPS XMM0, XMM0, 0 instruction
NAME="x86: [DPPS XMM0, XMM0, 0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f3a40c000
pi 1
'
EXPECT='dpps xmm0, xmm0, 0x0
'
run_test


# -------------------------------
# DPPD XMM0, XMM0, 0 instruction
NAME="x86: [DPPD XMM0, XMM0, 0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f3a41c000
pi 1
'
EXPECT='dppd xmm0, xmm0, 0x0
'
run_test


# -------------------------------
# MPSADBW XMM0, XMM0, 0 instruction
NAME="x86: [MPSADBW XMM0, XMM0, 0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f3a42c000
pi 1
'
EXPECT='mpsadbw xmm0, xmm0, 0x0
'
run_test


# -------------------------------
# PCMPESTRM XMM0, XMM0, 0 instruction
NAME="x86: [PCMPESTRM XMM0, XMM0, 0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f3a60c000
pi 1
'
EXPECT='pcmpestrm xmm0, xmm0, 0x0
'
run_test


# -------------------------------
# PCMPESTRI XMM0, XMM0, 0 instruction
NAME="x86: [PCMPESTRI XMM0, XMM0, 0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f3a61c000
pi 1
'
EXPECT='pcmpestri xmm0, xmm0, 0x0
'
run_test


# -------------------------------
# PCMPISTRM XMM0, XMM0, 0 instruction
NAME="x86: [PCMPISTRM XMM0, XMM0, 0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f3a62c000
pi 1
'
EXPECT='pcmpistrm xmm0, xmm0, 0x0
'
run_test


# -------------------------------
# PCMPISTRI XMM0, XMM0, 0 instruction
NAME="x86: [PCMPISTRI XMM0, XMM0, 0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f3a63c000
pi 1
'
EXPECT='pcmpistri xmm0, xmm0, 0x0
'
run_test


# -------------------------------
# ROUNDPS XMM0, XMM0, 0 instruction
NAME="x86: [ROUNDPS XMM0, XMM0, 0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f3a08c000
pi 1
'
EXPECT='roundps xmm0, xmm0, 0x0
'
run_test


# -------------------------------
# ROUNDPD XMM0, XMM0, 0 instruction
NAME="x86: [ROUNDPD XMM0, XMM0, 0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f3a09c000
pi 1
'
EXPECT='roundpd xmm0, xmm0, 0x0
'
run_test


# -------------------------------
# ROUNDSS XMM0, XMM0, 0 instruction
NAME="x86: [ROUNDSS XMM0, XMM0, 0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f3a0ac000
pi 1
'
EXPECT='roundss xmm0, xmm0, 0x0
'
run_test


# -------------------------------
# ROUNDSD XMM0, XMM0, 0 instruction
NAME="x86: [ROUNDSD XMM0, XMM0, 0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f3a0bc000
pi 1
'
EXPECT='roundsd xmm0, xmm0, 0x0
'
run_test


# -------------------------------
# BLENDPS XMM0, XMM0, 0 instruction
NAME="x86: [BLENDPS XMM0, XMM0, 0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f3a0cc000
pi 1
'
EXPECT='blendps xmm0, xmm0, 0x0
'
run_test


# -------------------------------
# BLENDPD XMM0, XMM0, 0 instruction
NAME="x86: [BLENDPD XMM0, XMM0, 0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f3a0dc000
pi 1
'
EXPECT='blendpd xmm0, xmm0, 0x0
'
run_test


# -------------------------------
# PBLENDW XMM0, XMM0, 0 instruction
NAME="x86: [PBLENDW XMM0, XMM0, 0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f3a0ec000
pi 1
'
EXPECT='pblendw xmm0, xmm0, 0x0
'
run_test


# -------------------------------
# PALIGNR XMM0, XMM0, 0 instruction
NAME="x86: [PALIGNR XMM0, XMM0, 0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f3a0fc000
pi 1
'
EXPECT='palignr xmm0, xmm0, 0x0
'
run_test


# -------------------------------
# PALIGNR MM0, MM0, 0 instruction
NAME="x86: [PALIGNR MM0, MM0, 0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f3a0fc000
pi 1
'
EXPECT='palignr mm0, mm0, 0x0
'
run_test

# -------------------------------
# PSRLW MM0, 0X0 instruction
NAME="x86: [PSRLW MM0, 0X0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f71d000
pi 1
'
EXPECT='psrlw mm0, 0x0
'
run_test


# -------------------------------
# PSRLD MM0, 0X0 instruction
NAME="x86: [PSRLD MM0, 0X0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f72d000
pi 1
'
EXPECT='psrld mm0, 0x0
'
run_test


# -------------------------------
# PSRLQ MM0, 0X0 instruction
NAME="x86: [PSRLQ MM0, 0X0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f73d000
pi 1
'
EXPECT='psrlq mm0, 0x0
'
run_test


# -------------------------------
# PSLLW MM0, 0X0 instruction
NAME="x86: [PSLLW MM0, 0X0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f71f000
pi 1
'
EXPECT='psllw mm0, 0x0
'
run_test


# -------------------------------
# PSLLD MM0, 0X0 instruction
NAME="x86: [PSLLD MM0, 0X0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f72f000
pi 1
'
EXPECT='pslld mm0, 0x0
'
run_test


# -------------------------------
# PSLLQ MM0, 0X0 instruction
NAME="x86: [PSLLQ MM0, 0X0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0f73f000
pi 1
'
EXPECT='psllq mm0, 0x0
'
run_test


# -------------------------------
# PSRLW XMM0, 0X0 instruction
NAME="x86: [PSRLW XMM0, 0X0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f71d000
pi 1
'
EXPECT='psrlw xmm0, 0x0
'
run_test


# -------------------------------
# PSRLD XMM0, 0X0 instruction
NAME="x86: [PSRLD XMM0, 0X0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f72d000
pi 1
'
EXPECT='psrld xmm0, 0x0
'
run_test


# -------------------------------
# PSRLQ XMM0, 0X0 instruction
NAME="x86: [PSRLQ XMM0, 0X0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f73d000
pi 1
'
EXPECT='psrlq xmm0, 0x0
'
run_test


# -------------------------------
# PSLLW XMM0, 0X0 instruction
NAME="x86: [PSLLW XMM0, 0X0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f71f000
pi 1
'
EXPECT='psllw xmm0, 0x0
'
run_test


# -------------------------------
# PSLLD XMM0, 0X0 instruction
NAME="x86: [PSLLD XMM0, 0X0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f72f000
pi 1
'
EXPECT='pslld xmm0, 0x0
'
run_test


# -------------------------------
# PSLLQ XMM0, 0X0 instruction
NAME="x86: [PSLLQ XMM0, 0X0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f73f000
pi 1
'
EXPECT='psllq xmm0, 0x0
'
run_test


# -------------------------------
# PSRLDQ XMM0, 0X0 instruction
NAME="x86: [PSRLDQ XMM0, 0X0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f73d800
pi 1
'
EXPECT='psrldq xmm0, 0x0
'
run_test


# -------------------------------
# PSLLDQ XMM0, 0X0 instruction
NAME="x86: [PSLLDQ XMM0, 0X0]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660f73f800
pi 1
'
EXPECT='pslldq xmm0, 0x0
'
run_test


# -------------------------------
# MOV [ES:EAX], EAX instruction
NAME="x86: [MOV [ES:EAX], EAX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 26 8900
pi 1
'
EXPECT='mov [es:eax], eax
'
run_test


# -------------------------------
# MOV [CS:EAX], EAX instruction
NAME="x86: [MOV [CS:EAX], EAX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 2e 8900
pi 1
'
EXPECT='mov [cs:eax], eax
'
run_test


# -------------------------------
# MOV [SS:EAX], EAX instruction
NAME="x86: [MOV [SS:EAX], EAX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 36 8900
pi 1
'
EXPECT='mov [ss:eax], eax
'
run_test


# -------------------------------
# MOV [DS:EAX], EAX instruction
NAME="x86: [MOV [DS:EAX], EAX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 3e 8900
pi 1
'
EXPECT='mov [ds:eax], eax
'
run_test


# -------------------------------
# MOV [FS:EAX], EAX instruction
NAME="x86: [MOV [FS:EAX], EAX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 64 8900
pi 1
'
EXPECT='mov [fs:eax], eax
'
run_test


# -------------------------------
# MOV [GS:EAX], EAX instruction
NAME="x86: [MOV [GS:EAX], EAX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 65 8900
pi 1
'
EXPECT='mov [gs:eax], eax
'
run_test

# -------------------------------
# FXSAVE [EAX] instruction
NAME="x86: [FXSAVE [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0fae00
pi 1
'
EXPECT='fxsave [eax]
'
run_test


# -------------------------------
# BOUND EAX, [EAX] instruction
NAME="x86: [BOUND EAX, [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 6200
pi 1
'
EXPECT='bound eax, [eax]
'
run_test


# -------------------------------
# ARPL [EAX], AX instruction
NAME="x86: [ARPL [EAX], AX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 6300
pi 1
'
EXPECT='arpl [eax], ax
'
run_test


# -------------------------------
# CMPXCHG [EAX], AL instruction
NAME="x86: [CMPXCHG [EAX], AL]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0fb000
pi 1
'
EXPECT='cmpxchg [eax], al
'
run_test


# -------------------------------
# CMPXCHG [EAX], EAX instruction
NAME="x86: [CMPXCHG [EAX], EAX]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0fb100
pi 1
'
EXPECT='cmpxchg [eax], eax
'
run_test


# -------------------------------
# CMPXCHG8B [EAX] instruction
BROKEN=1
NAME="x86: [CMPXCHG8B [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0fc7c0
pi 1
'
EXPECT='cmpxchg8b [eax]
'
run_test


# -------------------------------
# LOCK CMPXCHG8B [EAX] instruction
BROKEN=1
NAME="x86: [LOCK CMPXCHG8B [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx f00fc7c0
pi 1
'
EXPECT='lock cmpxchg8b [eax]
'
run_test


# -------------------------------
# VMPTRLD [EAX] instruction
BROKEN=1
NAME="x86: [VMPTRLD [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0fc730
pi 1
'
EXPECT='vmptrld [eax]
'
run_test


# -------------------------------
# VMCLEAR [EAX] instruction
BROKEN=1
NAME="x86: [VMCLEAR [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 660fc730
pi 1
'
EXPECT='vmclear [eax]
'
run_test


# -------------------------------
# VMXON [EAX] instruction
BROKEN=1
NAME="x86: [VMXON [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx f30fc730
pi 1
'
EXPECT='vmxon [eax]
'
run_test


# -------------------------------
# VMPTRST [EAX] instruction
BROKEN=1
NAME="x86: [VMPTRST [EAX]]"
FILE=malloc://32
CMDS='
e asm.arch=x86
e asm.bits=32
wx 0fc738
pi 1
'
EXPECT='vmptrst [eax]
'
run_test


