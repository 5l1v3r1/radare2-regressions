#!/bin/sh
[ -e tests.sh ] && . ./tests.sh || . ../tests.sh

NAME='test pDj missing newline issue'
CMDS='
e asm.arch=x86
e asm.bits=64
wx 4883c768
pDj 4
'
EXPECT='[{"offset":0,"val":104,"esil":"104,rdi,+=,$o,of,=,$s,sf,=,$z,zf,=,$c63,cf,=,$p,pf,=","refptr":false,"fcn_addr":0,"fcn_last":0,"size":4,"opcode":"add rdi, 0x68","bytes":"4883c768","family":"cpu","type":"add","type_num":17,"type2_num":0}]

'
run_test

declare -a arr=("aa ; pdfj"
                "izzj"
                "ij"
                "jej"
                "izj"
                "iIj"
                "isj"
                "iSj"
                "irj"
                "iRj"
                "iSj"
                "iSj sha1"
                "aa ; aaij"
                "aa ; afij"
                "aa ; aerj"
                "aa ; agj"
                "aa ; aoj"
                "aa ; aOj"
                "aa ; arj"
                "aa ; axj @ sym.main"
                "aa ; axtj @ sym.main"
                "aa ; axfj @ sym.main"
                "drj"
                "dbj"
                "fj"
                "fsj"
                "p8j"
                "pdfj"
                "iaj"
                "pdrj"
                "aa ; pdfj @ sym.main"
                "aa ; pdj @@@ functions"
                "aa ; aflqj"
                "aa ; aarj"
                "oj"
                "pDj"
                "pdj"
                "pij"
                "psj @ str.csapp"
                "sj"
                "Sj"
                "pdj"
                "Tj"
                "ij"
                )

for i in "${arr[@]}"
do
  NAME="JSON: $i Well-formed"
  CMDS="!r2 -qc $i ../bins/elf/bomb | jq . > /dev/null && echo \"1\""
  EXPECT='1
'
  run_test
done

NAME="JSON: ej Well-formed"
CMDS="!r2 -qc ej ../bins/elf/bomb | jq . > /dev/null && echo \"1\""
BROKEN=1
EXPECT='1
'
run_test

NAME="JSON: CCj Well-formed"
CMDS="!r2 -qc CCj ../bins/elf/bomb | jq . > /dev/null && echo \"1\""
BROKEN=1
EXPECT='1
'
run_test
