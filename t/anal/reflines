for a in . .. ../.. ; do [ -e $a/tests.sh ] && . $a/tests.sh ; done

NAME="reflines offset"
FILE=malloc://1023
CMDS='e asm.bits=32
e asm.cpu=x86
e anal.cpu=x86
e scr.utf8=true
e asm.comments=false
e asm.bytes=false
e scr.color=false
wx 31c039d6724aeb72908db426000000008d7e0131d289e8f7f131d28944241c89f8f7f13944241c76678b93080200008b028b50143b5018736dc6020983c20189501489f031d201cef7f129d639f5762a8b8b8c05000085c975b683c6018b93080200008b028b50143b50187327c6022083c20139f589501477d68b44242c65330514000000753783c43c5b5e5f5dc39089feebc9c744240420000000890424e87cc9ffffeba6c744240409000000890424e86ac9ffff8b8b8c050000eb84e87d1001008db6000000008dbc270000000055575653e8f7f0ffff81c32b9d010083ec3c658b0d14000000894c242c31c98b6a0c8b720889e929f1c1e90285c9894c241c0f848100000039f50f84930000008b7a1801fdf7d721fd8b7a1089e9896a0c2b4a0489fd2b6a0439e97f718b7a0c31ed
aa > /dev/null
pd 38
'
EXPECT='╒ (fcn) fcn.00000000 1023
│           0x00000000   xor eax, eax
│           0x00000002   cmp esi, edx
│       ┌─< 0x00000004   jb 0x50
│      ┌──< 0x00000006   jmp 0x7a
│      ││   0x00000008   nop
│      ││   0x00000009   lea esi, dword [esi]
│  ┌──────> 0x00000010   lea edi, dword [esi + 1]
│  │   ││   0x00000013   xor edx, edx
│  │   ││   0x00000015   mov eax, ebp
│  │   ││   0x00000017   div ecx
│  │   ││   0x00000019   xor edx, edx
│  │   ││   0x0000001b   mov dword [esp + 0x1c], eax
│  │   ││   0x0000001f   mov eax, edi
│  │   ││   0x00000021   div ecx
│  │   ││   0x00000023   cmp dword [esp + 0x1c], eax
│  │  ┌───< 0x00000027   jbe 0x90
│  │  │││   0x00000029   mov edx, dword [ebx + 0x208]
│  │  │││   0x0000002f   mov eax, dword [edx]
│  │  │││   0x00000031   mov edx, dword [eax + 0x14]
│  │  │││   0x00000034   cmp edx, dword [eax + 0x18]
│  │ ┌────< 0x00000037   jae 0xa6
│  │ ││││   0x00000039   mov byte [edx], 9
│  │ ││││   0x0000003c   add edx, 1
│  │ ││││   0x0000003f   mov dword [eax + 0x14], edx
│  │ ││││   0x00000042   mov eax, esi
│  │ ││││   0x00000044   xor edx, edx
│  │ ││││   0x00000046   add esi, ecx
│  │ ││││   0x00000048   div ecx
│  │ ││││   0x0000004a   sub esi, edx
│  │ ││││   0x0000004c   cmp ebp, esi
│  │┌─────< 0x0000004e   jbe 0x7a
│  │││││└─> 0x00000050   mov ecx, dword [ebx + 0x58c]
│  │││││    0x00000056   test ecx, ecx
│  └──────< 0x00000058   jne 0x10
│   ││││    0x0000005a   add esi, 1
│   ││││    0x0000005d   mov edx, dword [ebx + 0x208]
│   ││││    0x00000063   mov eax, dword [edx]
│   ││││    0x00000065   mov edx, dword [eax + 0x14]
'

run_test

NAME="reflines offset (ascii)"
FILE=malloc://1023
CMDS='e asm.bits=32
e asm.cpu=x86
e anal.cpu=x86
e asm.comments=false
e asm.bytes=false
e scr.utf8=false
e scr.color=false
wx 31c039d6724aeb72908db426000000008d7e0131d289e8f7f131d28944241c89f8f7f13944241c76678b93080200008b028b50143b5018736dc6020983c20189501489f031d201cef7f129d639f5762a8b8b8c05000085c975b683c6018b93080200008b028b50143b50187327c6022083c20139f589501477d68b44242c65330514000000753783c43c5b5e5f5dc39089feebc9c744240420000000890424e87cc9ffffeba6c744240409000000890424e86ac9ffff8b8b8c050000eb84e87d1001008db6000000008dbc270000000055575653e8f7f0ffff81c32b9d010083ec3c658b0d14000000894c242c31c98b6a0c8b720889e929f1c1e90285c9894c241c0f848100000039f50f84930000008b7a1801fdf7d721fd8b7a1089e9896a0c2b4a0489fd2b6a0439e97f718b7a0c31ed
aa >/dev/null
pd 38
'
EXPECT='/ (fcn) fcn.00000000 1023
|           0x00000000   xor eax, eax
|           0x00000002   cmp esi, edx
|       ,=< 0x00000004   jb 0x50
|      ,==< 0x00000006   jmp 0x7a
|      ||   0x00000008   nop
|      ||   0x00000009   lea esi, dword [esi]
|  .------> 0x00000010   lea edi, dword [esi + 1]
|  |   ||   0x00000013   xor edx, edx
|  |   ||   0x00000015   mov eax, ebp
|  |   ||   0x00000017   div ecx
|  |   ||   0x00000019   xor edx, edx
|  |   ||   0x0000001b   mov dword [esp + 0x1c], eax
|  |   ||   0x0000001f   mov eax, edi
|  |   ||   0x00000021   div ecx
|  |   ||   0x00000023   cmp dword [esp + 0x1c], eax
|  |  ,===< 0x00000027   jbe 0x90
|  |  |||   0x00000029   mov edx, dword [ebx + 0x208]
|  |  |||   0x0000002f   mov eax, dword [edx]
|  |  |||   0x00000031   mov edx, dword [eax + 0x14]
|  |  |||   0x00000034   cmp edx, dword [eax + 0x18]
|  | ,====< 0x00000037   jae 0xa6
|  | ||||   0x00000039   mov byte [edx], 9
|  | ||||   0x0000003c   add edx, 1
|  | ||||   0x0000003f   mov dword [eax + 0x14], edx
|  | ||||   0x00000042   mov eax, esi
|  | ||||   0x00000044   xor edx, edx
|  | ||||   0x00000046   add esi, ecx
|  | ||||   0x00000048   div ecx
|  | ||||   0x0000004a   sub esi, edx
|  | ||||   0x0000004c   cmp ebp, esi
|  |,=====< 0x0000004e   jbe 0x7a
|  |||||`-> 0x00000050   mov ecx, dword [ebx + 0x58c]
|  |||||    0x00000056   test ecx, ecx
|  `======< 0x00000058   jne 0x10
|   ||||    0x0000005a   add esi, 1
|   ||||    0x0000005d   mov edx, dword [ebx + 0x208]
|   ||||    0x00000063   mov eax, dword [edx]
|   ||||    0x00000065   mov edx, dword [eax + 0x14]
'
run_test

