#!/bin/sh
for a in . .. ../.. ; do [ -e $a/tests.sh ] && . $a/tests.sh ; done

ARCH=x86
# -------------------------------
# VADDPD YMM0, YMM0, YMM0 instruction
NAME="x86 AVX: [VADDPD YMM0, YMM0, YMM0]"
FILE=malloc://32
CMDS="
e asm.arch=${ARCH}
e asm.bits=32
wx c5fd58c0
pi 1
"
EXPECT="vaddpd ymm0, ymm0, ymm0
"
run_test


# -------------------------------
# AESDEC XMM0, XMM0 instruction
NAME="x86 AVX: [AESDEC XMM0, XMM0]"
FILE=malloc://32
CMDS="
e asm.arch=${ARCH}
e asm.bits=32
wx 660f38dec0
pi 1
"
EXPECT="aesdec xmm0, xmm0
"
run_test


# -------------------------------
# AESDECLAST XMM0, XMM0 instruction
NAME="x86 AVX: [AESDECLAST XMM0, XMM0]"
FILE=malloc://32
CMDS="
e asm.arch=${ARCH}
e asm.bits=32
wx 660f38dfc0
pi 1
"
EXPECT="aesdeclast xmm0, xmm0
"
run_test


# -------------------------------
# AESENC XMM0, XMM0 instruction
NAME="x86 AVX: [AESENC XMM0, XMM0]"
FILE=malloc://32
CMDS="
e asm.arch=${ARCH}
e asm.bits=32
wx 660f38dcc0
pi 1
"
EXPECT="aesenc xmm0, xmm0
"
run_test


# -------------------------------
# AESENCLAST XMM0, XMM0 instruction
NAME="x86 AVX: [AESENCLAST XMM0, XMM0]"
FILE=malloc://32
CMDS="
e asm.arch=${ARCH}
e asm.bits=32
wx 660f38ddc0
pi 1
"
EXPECT="aesenclast xmm0, xmm0
"
run_test


# -------------------------------
# AESIMC XMM0, XMM0 instruction
NAME="x86 AVX: [AESIMC XMM0, XMM0]"
FILE=malloc://32
CMDS="
e asm.arch=${ARCH}
e asm.bits=32
wx 660f38dbc0
pi 1
"
EXPECT="aesimc xmm0, xmm0
"
run_test


# -------------------------------
# AESKEYGENASSIST XMM0, XMM0, 0X0 instruction
NAME="x86 AVX: [AESKEYGENASSIST XMM0, XMM0, 0X0]"
FILE=malloc://32
CMDS="
e asm.arch=${ARCH}
e asm.bits=32
wx 660f3adfc000
pi 1
"
EXPECT="aeskeygenassist xmm0, xmm0, 0x0
"
run_test


# -------------------------------
# VAESDEC XMM0, XMM0, XMM0 instruction
NAME="x86 AVX: [VAESDEC XMM0, XMM0, XMM0]"
FILE=malloc://32
CMDS="
e asm.arch=${ARCH}
e asm.bits=32
wx c4e279dec0
pi 1
"
EXPECT="vaesdec xmm0, xmm0, xmm0
"
run_test


# -------------------------------
# VAESDECLAST XMM0, XMM0 instruction
NAME="x86 AVX: [VAESDECLAST XMM0, XMM0]"
FILE=malloc://32
CMDS="
e asm.arch=${ARCH}
e asm.bits=32
wx c4e279dfc0
pi 1
"
EXPECT="vaesdeclast xmm0, xmm0
"
run_test


# -------------------------------
# VAESENC XMM0, XMM0 instruction
NAME="x86 AVX: [VAESENC XMM0, XMM0]"
FILE=malloc://32
CMDS="
e asm.arch=${ARCH}
e asm.bits=32
wx c4e279dcc0
pi 1
"
EXPECT="vaesenc xmm0, xmm0
"
run_test


# -------------------------------
# VAESENCLAST XMM0, XMM0, XMM0 instruction
NAME="x86 AVX: [VAESENCLAST XMM0, XMM0, XMM0]"
FILE=malloc://32
CMDS="
e asm.arch=${ARCH}
e asm.bits=32
wx c4e279ddc0
pi 1
"
EXPECT="vaesenclast xmm0, xmm0, xmm0
"
run_test


# -------------------------------
# VAESIMC XMM0, XMM0 instruction
NAME="x86 AVX: [VAESIMC XMM0, XMM0]"
FILE=malloc://32
CMDS="
e asm.arch=${ARCH}
e asm.bits=32
wx c4e279dbc0
pi 1
"
EXPECT="vaesimc xmm0, xmm0
"
run_test

# -------------------------------
# VAESKEYGENASSIST XMM0, XMM0, 0X0 instruction
NAME="x86 AVX: [VAESKEYGENASSIST XMM0, XMM0, 0X0]"
FILE=malloc://32
CMDS="
e asm.arch=${ARCH}
e asm.bits=32
wx c4e379dfc000
pi 1
"
EXPECT="vaeskeygenassist xmm0, xmm0, 0x0
"
run_test


# -------------------------------
# VEXTRACTF128 XMM0, YMM0, 0X0 instruction
NAME="x86 AVX: [VEXTRACTF128 XMM0, YMM0, 0X0]"
FILE=malloc://32
CMDS="
e asm.arch=${ARCH}
e asm.bits=32
wx c4e37d19c000
pi 1
"
EXPECT="vextractf128 xmm0, ymm0, 0x0
"
run_test


# -------------------------------
# VBROADCASTF128 YMM0, [0X0] instruction
BROKEN=1
NAME="x86 AVX: [VBROADCASTF128 YMM0, [0X0]]"
FILE=malloc://32
CMDS="
e asm.arch=${ARCH}
e asm.bits=32
wx c4e27d1a0500000000
pi 1
"
EXPECT="vbroadcastf128 ymm0, [0x0]
"
run_test


# -------------------------------
# VBROADCASTSD YMM0, qword [0X0] instruction
NAME="x86 AVX: [VBROADCASTSD YMM0, qword [0X0]]"
FILE=malloc://32
CMDS="
e asm.arch=${ARCH}
e asm.bits=32
wx c4e27d190500000000
pi 1
"
EXPECT="vbroadcastsd ymm0, qword [0x0]
"
run_test


# -------------------------------
# VINSERTF128 YMM0, YMM0, XMM0, 0X0 instruction
NAME="x86 AVX: [VINSERTF128 YMM0, YMM0, XMM0, 0X0]"
FILE=malloc://32
CMDS="
e asm.arch=${ARCH}
e asm.bits=32
wx c4e37d18c000
pi 1
"
EXPECT="vinsertf128 ymm0, ymm0, xmm0, 0x0
"
run_test


# -------------------------------
# VPERM2F128 YMM0, YMM0, YMM0, 0X0 instruction
NAME="x86 AVX: [VPERM2F128 YMM0, YMM0, YMM0, 0X0]"
FILE=malloc://32
CMDS="
e asm.arch=${ARCH}
e asm.bits=32
wx c4e37d06c000
pi 1
"
EXPECT="vperm2f128 ymm0, ymm0, ymm0, 0x0
"
run_test


# -------------------------------
# VPERMILPD YMM0, YMM0, [0X0] instruction
NAME="x86 AVX: [VPERMILPD YMM0, YMM0, [0X0]]"
FILE=malloc://32
CMDS="
e asm.arch=${ARCH}
e asm.bits=32
wx c4e27d0d0500000000
pi 1
"
EXPECT="vpermilpd ymm0, ymm0, [0x0]
"
run_test


# -------------------------------
# VPERMILPS YMM0, YMM0, [0X0] instruction
NAME="x86 AVX: [VPERMILPS YMM0, YMM0, [0X0]]"
FILE=malloc://32
CMDS="
e asm.arch=${ARCH}
e asm.bits=32
wx c4e27d0c0500000000
pi 1
"
EXPECT="vpermilps ymm0, ymm0, [0x0]
"
run_test


# -------------------------------
# VFMADD132PD XMM0, XMM0, XMM0 instruction
BROKEN=1
NAME="x86 AVX: [VFMADD132PD XMM0, XMM0, XMM0]"
FILE=malloc://32
CMDS="
e asm.arch=${ARCH}
e asm.bits=32
wx c4e2f998c0
pi 1
"
EXPECT="vfmadd132pd xmm0, xmm0, xmm0
"
run_test


# -------------------------------
# VFMADD213PD XMM0, XMM0, XMM0 instruction
BROKEN=1
NAME="x86 AVX: [VFMADD213PD XMM0, XMM0, XMM0]"
FILE=malloc://32
CMDS="
e asm.arch=${ARCH}
e asm.bits=32
wx c4e2f9a8c0
pi 1
"
EXPECT="vfmadd213pd xmm0, xmm0, xmm0
"
run_test


# -------------------------------
# VFMADD231PD XMM0, XMM0, XMM0 instruction
BROKEN=1
NAME="x86 AVX: [VFMADD231PD XMM0, XMM0, XMM0]"
FILE=malloc://32
CMDS="
e asm.arch=${ARCH}
e asm.bits=32
wx c4e2f9b8c0
pi 1
"
EXPECT="vfmadd231pd xmm0, xmm0, xmm0
"
run_test

