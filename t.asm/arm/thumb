#!/bin/sh
for a in . .. ../.. ; do [ -e $a/tests.sh ] && . $a/tests.sh ; done

test_vector() {
NAME="${PLUGIN} ${BITS}: [${2}]"
if [ "${4}" = "br" ]; then
    BROKEN=1
fi
CMDS='!rasm2 -a '${1}' -b '${BITS}' "'${2}'"
'
if [ "${IGNORE_ERR}" = 1 ]; then
EXPECT="${3}
"
else
EXPECT_ERR="${3}
"
fi
run_test
}

test_invalid() {
IGNORE_ERR=0
test_vector "${1}" "${2}" "Cannot assemble '${2}' at line 3
invalid"
}

PLUGIN=arm
BITS=16

NAME="${PLUGIN}: arm-thumb-mclass"
CMDS='e asm.arch=arm
e asm.bits=16
e asm.features=mclass
wx eff31080
e asm.arch=arm
pi 1
e asm.arch=arm.gnu
pi 1
'
EXPECT='mrs r0, primask
mrs r0, PRIMASK
'
run_test

# Assembly tests
test_vector "${PLUGIN}" "ldr r0, [r1]" 0868 br
test_vector "${PLUGIN}" "ldr r1, [r3]" 1968 br
test_vector "${PLUGIN}" "ldr r0, [r0, 0x74]" 406f "br"
test_vector "${PLUGIN}" "ldr r0, [r0, 0x7]" d0f80700 "br"
test_vector "${PLUGIN}" "ldr r1, [r2, 0x124]" d2f82411 "br"
test_vector "${PLUGIN}" "blx lr" f047 "br"
test_vector "${PLUGIN}" "mov fp, r1" 8b46 "br"

# Expected to fail
test_invalid "${PLUGIN}" "b gh"


