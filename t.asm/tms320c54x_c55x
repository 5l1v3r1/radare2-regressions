#!/bin/sh
for a in . .. ../.. ; do [ -e $a/tests.sh ] && . $a/tests.sh ; done

tms320_c55x_test() {
    local BROKEN=
    local NAME="c55x -- $1"
    local FILE=malloc://128
    local CMDS="e asm.arch=tms320
e asm.cpu=c55x
e io.va=true
wx $2
pi 1
"
    local EXPECT="$3
"
    run_test
}

# NOP + [E] test

tms320_c55x_test	"NOP"		20		"NOP"
tms320_c55x_test	"NOP E"		21		"|| NOP"

# RPTCC + [k8, cond] full test

tms320_c55x_test	"RPTCC"		00000f		"RPTCC 0x0F, AC0 == 0"		# cond = 000 0000 b
tms320_c55x_test	"RPTCC"		00111e		"RPTCC 0x1E, AC1 != 0"		# cond = 001 0001 b
tms320_c55x_test	"RPTCC"		00222d		"RPTCC 0x2D, AC2 < 0"		# cond = 010 0010 b
tms320_c55x_test	"RPTCC"		00333c		"RPTCC 0x3C, AC3 <= 0"		# cond = 011 0011 b
tms320_c55x_test	"RPTCC"		00444b		"RPTCC 0x4B, T0 > 0"		# cond = 100 0100 b
tms320_c55x_test	"RPTCC"		00555a		"RPTCC 0x5A, T1 >= 0"		# cond = 101 0101 b
tms320_c55x_test	"RPTCC"		000669		"RPTCC 0x69, T2 == 0"		# cond = 000 0110 b
tms320_c55x_test	"RPTCC"		001778		"RPTCC 0x78, T3 != 0"		# cond = 001 0111 b
tms320_c55x_test	"RPTCC"		002887		"RPTCC 0x87, AR0 < 0"		# cond = 010 1000 b
tms320_c55x_test	"RPTCC"		003996		"RPTCC 0x96, AR1 <= 0"		# cond = 011 1001 b
tms320_c55x_test	"RPTCC"		004aa5		"RPTCC 0xA5, AR2 > 0"		# cond = 100 1010 b
tms320_c55x_test	"RPTCC"		005bb4		"RPTCC 0xB4, AR3 >= 0"		# cond = 101 1011 b
tms320_c55x_test	"RPTCC"		000cc3		"RPTCC 0xC3, AR4 == 0"		# cond = 000 1100 b
tms320_c55x_test	"RPTCC"		001dd2		"RPTCC 0xD2, AR5 != 0"		# cond = 001 1101 b
tms320_c55x_test	"RPTCC"		002ee1		"RPTCC 0xE1, AR6 < 0"		# cond = 010 1110 b
tms320_c55x_test	"RPTCC"		003ff0		"RPTCC 0xF0, AR7 <= 0"		# cond = 011 1111 b

tms320_c55x_test	"RPTCC"		006011		"RPTCC 0x11, overflow(AC0)"	# cond = 110 0000 b
tms320_c55x_test	"RPTCC"		007122		"RPTCC 0x22, !overflow(AC1)"	# cond = 111 0001 b
tms320_c55x_test	"RPTCC"		007233		"RPTCC 0x33, !overflow(AC2)"	# cond = 111 0010 b
tms320_c55x_test	"RPTCC"		006344		"RPTCC 0x44, overflow(AC3)"	# cond = 110 0011 b

tms320_c55x_test	"RPTCC"		006400		"RPTCC 0x00, TC1"		# cond = 110 0100 b
tms320_c55x_test	"RPTCC"		006500		"RPTCC 0x00, TC2"		# cond = 110 0101 b
tms320_c55x_test	"RPTCC"		006600		"RPTCC 0x00, CARRY"		# cond = 110 0110 b
tms320_c55x_test	"RPTCC"		006800		"RPTCC 0x00, TC1 & TC2"		# cond = 110 1000 b
tms320_c55x_test	"RPTCC"		006900		"RPTCC 0x00, TC1 & !TC2"	# cond = 110 1001 b
tms320_c55x_test	"RPTCC"		006a00		"RPTCC 0x00, !TC1 & TC2"	# cond = 110 1010 b
tms320_c55x_test	"RPTCC"		006b00		"RPTCC 0x00, !TC1 & !TC2"	# cond = 110 1011 b
tms320_c55x_test	"RPTCC"		007400		"RPTCC 0x00, !TC1"		# cond = 111 0100 b
tms320_c55x_test	"RPTCC"		007500		"RPTCC 0x00, !TC2"		# cond = 111 0101 b
tms320_c55x_test	"RPTCC"		007600		"RPTCC 0x00, !CARRY"		# cond = 111 0110 b

tms320_c55x_test	"RPTCC"		007800		"RPTCC 0x00, TC1 | TC2"		# cond = 111 1000 b
tms320_c55x_test	"RPTCC"		007900		"RPTCC 0x00, TC1 | !TC2"	# cond = 111 1001 b
tms320_c55x_test	"RPTCC"		007a00		"RPTCC 0x00, !TC1 | TC2"	# cond = 111 1010 b
tms320_c55x_test	"RPTCC"		007b00		"RPTCC 0x00, !TC1 | !TC2"	# cond = 111 1011 b
tms320_c55x_test	"RPTCC"		007c00		"RPTCC 0x00, TC1 ^ TC2"		# cond = 111 1100 b
tms320_c55x_test	"RPTCC"		007d00		"RPTCC 0x00, TC1 ^ !TC2"	# cond = 111 1101 b
tms320_c55x_test	"RPTCC"		007e00		"RPTCC 0x00, !TC1 ^ TC2"	# cond = 111 1110 b
tms320_c55x_test	"RPTCC"		007f00		"RPTCC 0x00, !TC1 ^ !TC2"	# cond = 111 1111 b

# RETCC

tms320_c55x_test	"RETCC"		020000		"RETCC AC0 == 0"

# BCC + [L8] full test

tms320_c55x_test	"BCC"		040030		"BCC 0x30, AC0 == 0"		# L8 = 0x30
tms320_c55x_test	"BCC"		040021		"BCC 0x21, AC0 == 0"		# L8 = 0x21
tms320_c55x_test	"BCC"		040012		"BCC 0x12, AC0 == 0"		# L8 = 0x12
tms320_c55x_test	"BCC"		040003		"BCC 0x03, AC0 == 0"		# L8 = 0x03

# B + [L16] full test

tms320_c55x_test	"B"		063012		"B 0x3012"			# L16 = 0x3012
tms320_c55x_test	"B"		062301		"B 0x2301"			# L16 = 0x2301
tms320_c55x_test	"B"		061230		"B 0x1230"			# L16 = 0x1230
tms320_c55x_test	"B"		060123		"B 0x0123"			# L16 = 0x0123

# CALL

tms320_c55x_test	"CALL"		08dead		"CALL 0xDEAD"			# L16 = 0xDEAD

# RPT + [k16] test

tms320_c55x_test	"RPT"		0cdead		"RPT 0xDEAD"			# k16 = 0xDEAD

# RPTB + [pmad] test

tms320_c55x_test	"RPTB"		0edead		"RPTB 0xDEAD"			# pmad = 0xDEAD

# AND/OR/XOR/ADD/SUB/SFTS/SFTSC/SFTL + [DDSS, xxSHIFTW] full test

tms320_c55x_test	"AND"		100000		"AND AC0 << 0x00"		# DDSS = 0000 b
tms320_c55x_test	"OR"		101111		"OR AC1 << 0x11, AC0"		# DDSS = 0001 b
tms320_c55x_test	"XOR"		102222		"XOR AC2 << 0x22, AC0"		# DDSS = 0010 b
tms320_c55x_test	"ADD"		103333		"ADD AC3 << 0x33, AC0"		# DDSS = 0011 b
tms320_c55x_test	"SUB"		104444		"SUB AC0 << 0x04, AC1"		# DDSS = 0100 b
tms320_c55x_test	"SFTS"		105555		"SFTS AC1, 0x15"		# DDSS = 0101 b
tms320_c55x_test	"SFTSC"		106666		"SFTSC AC2, 0x26, AC1"		# DDSS = 0110 b
tms320_c55x_test	"SFTL"		107777		"SFTL AC3, 0x37, AC1"		# DDSS = 0111 b

tms320_c55x_test	"AND"		108088		"AND AC0 << 0x08, AC2"		# DDSS = 1000 b
tms320_c55x_test	"OR"		109199		"OR AC1 << 0x19, AC2"		# DDSS = 1001 b
tms320_c55x_test	"XOR"		10a2aa		"XOR AC2 << 0x2A"		# DDSS = 1010 b
tms320_c55x_test	"ADD"		10b3bb		"ADD AC3 << 0x3B, AC2"		# DDSS = 1011 b
tms320_c55x_test	"SUB"		10c4cc		"SUB AC0 << 0x0C, AC3"		# DDSS = 1100 b
tms320_c55x_test	"SFTS"		10d5dd		"SFTS AC1, 0x1D, AC3"		# DDSS = 1101 b
tms320_c55x_test	"SFTSC"		10e6ee		"SFTSC AC2, 0x2E, AC3"		# DDSS = 1110 b
tms320_c55x_test	"SFTL"		10f7ff		"SFTL AC3, 0x3F"		# DDSS = 1111 b

# EXP + [SS,dd] full test

tms320_c55x_test	"EXP"		103800		"EXP AC3, T0"			# SS = 11 b, dd = 00
tms320_c55x_test	"EXP"		102810		"EXP AC2, T1"			# SS = 10 b, dd = 01
tms320_c55x_test	"EXP"		101820		"EXP AC1, T2"			# SS = 01 b, dd = 10
tms320_c55x_test	"EXP"		100830		"EXP AC0, T3"			# SS = 00 b, dd = 11

# MANT :: NEXP

tms320_c55x_test	"MANT::NEXP"	109930		"MANT AC1, AC2 :: NEXP AC1, T3"

# BCNT + [SS,SS,dd,t] full test

tms320_c55x_test	"BCNT"		100ac0		"BCNT AC0, AC3, TC1, T0"
tms320_c55x_test	"BCNT"		101a80		"BCNT AC1, AC2, TC1, T0"
tms320_c55x_test	"BCNT"		102a50		"BCNT AC2, AC1, TC1, T1"
tms320_c55x_test	"BCNT"		103a10		"BCNT AC3, AC0, TC1, T1"

tms320_c55x_test	"BCNT"		100ae1		"BCNT AC0, AC3, TC2, T2"
tms320_c55x_test	"BCNT"		101aa1		"BCNT AC1, AC2, TC2, T2"
tms320_c55x_test	"BCNT"		102a71		"BCNT AC2, AC1, TC2, T3"
tms320_c55x_test	"BCNT"		103a31		"BCNT AC3, AC0, TC2, T3"

# MAXDIFF [DD,SS,SS,DD] test

tms320_c55x_test	"MAXDIFF"	108c70		"MAXDIFF AC0, AC1, AC2, AC3"

# DMAXDIFF [DD,SS,SS,DD,r] test

tms320_c55x_test	"DMAXDIFF"	108d70		"DMAXDIFF AC0, AC1, AC2, AC3, TRN0"
tms320_c55x_test	"DMAXDIFF"	108d71		"DMAXDIFF AC0, AC1, AC2, AC3, TRN1"

# MINDIFF [DD,SS,SS,DD] test

tms320_c55x_test	"MINDIFF"	107e80		"MINDIFF AC3, AC2, AC1, AC0"

# DMINDIFF [DD,SS,SS,DD,r] test

tms320_c55x_test	"DMINDIFF"	107f80		"DMINDIFF AC3, AC2, AC1, AC0, TRN0"
tms320_c55x_test	"DMINDIFF"	107f81		"DMINDIFF AC3, AC2, AC1, AC0, TRN1"

# CMP/CMPAND/CMPOR [FSSS,FDDD,cc,tt,t,u] full test

tms320_c55x_test	"CMP"		1200a0		"CMP AC0 == AR2, TC1"
tms320_c55x_test	"CMPAND"	1211b1		"CMPAND AC1 == AR3, TC1, TC2"
tms320_c55x_test	"CMPAND"	1221c9		"CMPAND AC2 == AR4, !TC1, TC2"
tms320_c55x_test	"CMPOR"		1232d2		"CMPOR AC3 == AR5, TC2, TC1"
tms320_c55x_test	"CMPOR"		1242ea		"CMPOR T0 == AR6, !TC2, TC1"

tms320_c55x_test	"CMPU"		1250f5		"CMPU T1 == AR7, TC2"
tms320_c55x_test	"CMPANDU"	126106		"CMPANDU T2 == AC0, TC2, TC1"
tms320_c55x_test	"CMPANDU"	12711e		"CMPANDU T3 == AC1, !TC2, TC1"
tms320_c55x_test	"CMPORU"	128225		"CMPORU AR0 == AC2, TC1, TC2"
tms320_c55x_test	"CMPORU"	12923d		"CMPORU AR1 == AC3, !TC1, TC2"

# ROL/ROR + [BitIn,BitOut] full test

tms320_c55x_test	"ROL"		120330		"ROL CARRY, AC0, CARRY, AC3"
tms320_c55x_test	"ROL"		121321		"ROL TC2, AC1, CARRY, AC2"
tms320_c55x_test	"ROR"		12231a		"ROR TC2, AC2, CARRY, AC1"
tms320_c55x_test	"ROR"		12330b		"ROR TC2, AC3, TC2, AC0"

# AADD/AMOV/ASUB + [TAx,TAy,P8] test

tms320_c55x_test	"AADD"		140000		"AADD AC0, AC0"
tms320_c55x_test	"AMOV"		140001		"AMOV AC0, AC0"
tms320_c55x_test	"ASUB"		140002		"ASUB AC0, AC0"

tms320_c55x_test	"AADD"		141104		"AADD 0x11, AC0"
tms320_c55x_test	"AMOV"		142205		"AMOV 0x22, AC0"
tms320_c55x_test	"ASUB"		143306		"ASUB 0x33, AC0"

tms320_c55x_test	"AADD"		140008		"AADD AC0, AC0"		# ?
tms320_c55x_test	"AMOV"		140009		"AMOV AC0, AC0"		# ?
tms320_c55x_test	"ASUB"		14000a		"ASUB AC0, AC0"		# ?

tms320_c55x_test	"AADD"		14110c		"AADD 0x11, AC0"	# ?
tms320_c55x_test	"AMOV"		14220d		"AMOV 0x22, AC0"	# ?
tms320_c55x_test	"ASUB"		14330e		"ASUB 0x33, AC0"	# ?

# AAAD/AMOV/ASUB + [XACsrc,XACdst] test

tms320_c55x_test	"AADD"		1481d0		"AADD XAR0, XAR5"
tms320_c55x_test	"AMOV"		1491c1		"AMOV XAR1, XAR4"
tms320_c55x_test	"ASUB"		14a1b2		"ASUB XAR2, XAR3"
tms320_c55x_test	"AADD"		14b1a8		"AADD XAR3, XAR2"
tms320_c55x_test	"AMOV"		14c199		"AMOV XAR4, XAR1"
tms320_c55x_test	"ASUB"		14d18a		"ASUB XAR5, XAR0"

# MOV + [k7,k9,k12] test

tms320_c55x_test	"MOV"		1601a0		"MOV 0x1A, DPH"		# k7
tms320_c55x_test	"MOV"		160250		"MOV 0x25, DPH"		# k7
tms320_c55x_test	"MOV"		1604a0		"MOV 0x4A, DPH"		# k7

tms320_c55x_test	"MOV"		160af3		"MOV 0x0AF, PDP"	# k9
tms320_c55x_test	"MOV"		1615f3		"MOV 0x15F, PDP"	# k9

tms320_c55x_test	"MOV"		1606c4		"MOV 0x06C, BK03"	# k12
tms320_c55x_test	"MOV"		1617d5		"MOV 0x17D, BK47"	# k12
tms320_c55x_test	"MOV"		1628e6		"MOV 0x28E, BKC"	# k12
tms320_c55x_test	"MOV"		1639f8		"MOV 0x39F, CSR"	# k12
tms320_c55x_test	"MOV"		164a09		"MOV 0x4A0, BRC0"	# k12
tms320_c55x_test	"MOV"		165b1a		"MOV 0x5B1, BRC1"	# k12

# AND/OR/XOR + [k8] tests

tms320_c55x_test	"AND"		181110		"AND 0x11, AC0, AC1"
tms320_c55x_test	"OR"		1a2232		"OR 0x22, AC2, AC3"
tms320_c55x_test	"XOR"		1c3354		"XOR 0x33, T0, T1"

# MPYK/MACK + [R] test

tms320_c55x_test	"MPYK"		1e1110		"MPYK 0x11, AC0, AC1"
tms320_c55x_test	"MPYK"		1e2261		"MPYKR 0x22, AC1, AC2"

tms320_c55x_test	"MACK"		1e3316		"MACK T1, 0x33, AC0, AC1"
tms320_c55x_test	"MACK"		1e446b		"MACKR T2, 0x44, AC1, AC2"

# MOV/AND/OR/XOR + [src,dst] test

tms320_c55x_test	"MOV"		2204		"MOV AC0, T0"
tms320_c55x_test	"AND"		2815		"AND AC1, T1"
tms320_c55x_test	"OR"		2a26		"OR AC2, T2"
tms320_c55x_test	"XOR"		2c37		"XOR AC3, T3"

# ADD/SUB/MAX/MIN/ABS/NEG/NOT + [src,dst] test

tms320_c55x_test	"ADD"		2400		"ADD AC0"
tms320_c55x_test	"SUB"		2600		"SUB AC0"
tms320_c55x_test	"MAX"		2e00		"MAX AC0"
tms320_c55x_test	"MIN"		3000		"MIN AC0"
tms320_c55x_test	"ABS"		3200		"ABS AC0"
tms320_c55x_test	"NEG"		3400		"NEG AC0"
tms320_c55x_test	"NOT"		3600		"NOT AC0"

tms320_c55x_test	"ADD"		2407		"ADD AC0, T3"
tms320_c55x_test	"SUB"		2618		"SUB AC1, AR0"
tms320_c55x_test	"MAX"		2e29		"MAX AC2, AR1"
tms320_c55x_test	"MIN"		303a		"MIN AC3, AR2"
tms320_c55x_test	"ABS"		324b		"ABS T0, AR3"
tms320_c55x_test	"NEG"		345c		"NEG T1, AR4"
tms320_c55x_test	"NOT"		366d		"NOT T2, AR5"

# PSH/POP + [src1,src2,dst1,dst2] test

tms320_c55x_test	"PSH"		3812		"PSH AC1, AC2"
tms320_c55x_test	"POP"		3a34		"POP AC3, T0"

# MOV/ADD/SUB + [k4,dst] test

tms320_c55x_test	"MOV"		3cf4		"MOV 0xF, T0"
tms320_c55x_test	"MOV"		3ef5		"MOV -0xF, T1"
tms320_c55x_test	"ADD"		40f6		"ADD 0xF, T2"
tms320_c55x_test	"SUB"		42f7		"SUB 0xF, T3"

# MOV HI(ACx), TAx test

tms320_c55x_test	"MOV"		4408		"MOV HI(AC0), AR0"

# SFTS + [dst] test

tms320_c55x_test	"SFTS"		4440		"SFTS AC0, #-1"
tms320_c55x_test	"SFTS"		4450		"SFTS AC0, #1"

# MOV SP/SSP/CDP/BRC0/BRC1/RPTC

tms320_c55x_test	"MOV"		4488		"MOV SP, AR0"
tms320_c55x_test	"MOV"		4499		"MOV SSP, AR1"
tms320_c55x_test	"MOV"		44aa		"MOV CDP, AR2"
tms320_c55x_test	"MOV"		44cb		"MOV BRC0, AR3"
tms320_c55x_test	"MOV"		44dc		"MOV BRC1, AR4"
tms320_c55x_test	"MOV"		44ed		"MOV RPTC, AR5"

# BCLR/BSET + [k4,ST0_55,ST1_55] test

tms320_c55x_test	"BLCR"		4610		"BCLR 0x1, ST0_55"
tms320_c55x_test	"BSET"		4621		"BSET 0x2, ST0_55"
tms320_c55x_test	"BLCR"		4632		"BCLR 0x3, ST1_55"
tms320_c55x_test	"BSET"		4643		"BSET 0x4, ST1_55"
tms320_c55x_test	"BLCR"		4654		"BCLR 0x5, ST2_55"
tms320_c55x_test	"BSET"		4665		"BSET 0x6, ST2_55"
tms320_c55x_test	"BLCR"		4676		"BCLR 0x7, ST3_55"
tms320_c55x_test	"BSET"		4687		"BSET 0x8, ST3_55"

# RPT/RPTADD/RPTSUB

tms320_c55x_test	"RPT"		4800		"RPT CSR"
tms320_c55x_test	"RPT"		4801		"RPTADD CSR, AC0"
tms320_c55x_test	"RPT"		4802		"RPTADD CSR, 0x0"
tms320_c55x_test	"RPT"		4803		"RPTSUB CSR, 0x0"

# RET/RETI

tms320_c55x_test	"RET"		4804		"RET"
tms320_c55x_test	"RET E"		4904		"|| RET"
tms320_c55x_test	"RETI"		4805		"RETI"

# B + [L7] test

tms320_c55x_test	"B"		4a7f		"B 0x7F"

# RPTBLOCAL + [pmad] test

tms320_c55x_test	"RPTBLOCAL"	4aff		"RPTBLOCAL 0x7F"

# RPT + [k8] test

tms320_c55x_test	"RPT"		4cff		"RPT 0xFF"

# AADD + [K8] test

tms320_c55x_test	"AADD"		4eff		"AADD 0xFF, SP"

# SFTL

tms320_c55x_test	"SFTL"		5000		"SFTL AC0, #1"		# need to replace '#..' -> '0x..' ?
tms320_c55x_test	"SFTL"		5001		"SFTL AC0, #-1"		# need to replace '#..' -> '0x..' ?

# POP/PSH/POPBOTH/PUSHBOTH

tms320_c55x_test	"POP"		5002		"POP AC0"
tms320_c55x_test	"POP"		5003		"POP dbl(AC0)"
tms320_c55x_test	"PSH"		5006		"PSH AC0"
tms320_c55x_test	"PSH"		5007		"PSH dbl(AC0)"
tms320_c55x_test	"POPBOTH"	5004		"POPBOTH AC0"
tms320_c55x_test	"PSHBOTH"	5005		"PSHBOTH AC0"

# MOV TAx, HI(ACx)/SP/SSP/CDP/CSR/BRC0/BRC1 test

tms320_c55x_test	"MOV"		5200		"MOV AC0, HI(AC0)"
tms320_c55x_test	"MOV"		5208		"MOV AC0, SP"
tms320_c55x_test	"MOV"		5209		"MOV AC0, SSP"
tms320_c55x_test	"MOV"		520a		"MOV AC0, CDP"
tms320_c55x_test	"MOV"		520c		"MOV AC0, CSR"
tms320_c55x_test	"MOV"		520d		"MOV AC0, BRC1"
tms320_c55x_test	"MOV"		520e		"MOV AC0, BRC0"

# ADDV/SQA/SQS/MPY/SQR/ROUND/SAT + [R] test

tms320_c55x_test	"ADDV"		5491		"ADDRV AC1, AC2"
tms320_c55x_test	"SQA"		5493		"SQAR AC1, AC2"
tms320_c55x_test	"SQS"		5495		"SQSR AC1, AC2"
tms320_c55x_test	"MPY"		5497		"MPYR AC1, AC2"
tms320_c55x_test	"SQR"		5499		"SQRR AC1, AC2"
tms320_c55x_test	"ROUND"		549b		"ROUND AC1, AC2"
tms320_c55x_test	"SAT"		549d		"SATR AC1, AC2"

# MAC/MAS/MPY + [R] test

tms320_c55x_test	"MAC"		5601		"MACR AC0, T0, AC0"	# is it correct ?
tms320_c55x_test	"MAC"		5641		"MACR AC0, T0, AC1, AC1"
tms320_c55x_test	"MAC"		5843		"MACR AC1, T0, AC0, AC1"
tms320_c55x_test	"MAS"		5643		"MASR T0, AC0, AC1"
tms320_c55x_test	"MPY"		5841		"MPYR T0, AC0, AC1"

# ADD/SUB/SFTCC/SFTL/SFTS/SFTSC test

tms320_c55x_test	"ADD"		5a00		"ADD AC0 << T0, AC0"
tms320_c55x_test	"SUB"		5a01		"SUB AC0 << T0, AC0"
tms320_c55x_test	"SFTCC"		5a02		"SFTCC AC0, TC1"
tms320_c55x_test	"SFTCC"		5a03		"SFTCC AC0, TC2"

tms320_c55x_test	"SFTL"		5c40		"SFTL AC0, T0, AC1"
tms320_c55x_test	"SFTS"		5c41		"SFTS AC0, T0, AC1"
tms320_c55x_test	"SFTSC"		5c42		"SFTSC AC0, T0, AC1"

# SWAP full test

tms320_c55x_test	"SWAP"		5e00		"SWAP AC0, AC2"
tms320_c55x_test	"SWAP"		5e01		"SWAP AC1, AC3"
tms320_c55x_test	"SWAP"		5e04		"SWAP T0, T2"
tms320_c55x_test	"SWAP"		5e05		"SWAP T1, T3"
tms320_c55x_test	"SWAP"		5e08		"SWAP AR0, AR2"
tms320_c55x_test	"SWAP"		5e09		"SWAP AR1, AR3"
tms320_c55x_test	"SWAP"		5e0c		"SWAP AR4, T0"
tms320_c55x_test	"SWAP"		5e0d		"SWAP AR5, T1"
tms320_c55x_test	"SWAP"		5e0e		"SWAP AR6, T2"
tms320_c55x_test	"SWAP"		5e0f		"SWAP AR7, T3"

tms320_c55x_test	"SWAP"		5e10		"SWAPP AC0, AC2"
tms320_c55x_test	"SWAP"		5e14		"SWAPP T0, T2"
tms320_c55x_test	"SWAP"		5e18		"SWAPP AR0, AR2"
tms320_c55x_test	"SWAP"		5e1c		"SWAPP AR4, T0"
tms320_c55x_test	"SWAP"		5e1e		"SWAPP AR6, T2"
tms320_c55x_test	"SWAP"		5e2c		"SWAP4 AR4, T0"
tms320_c55x_test	"SWAP"		5e38		"SWAP AR0, AR1"

# B/BCC/CALL/CALLCC + [l4,P24,cond] test

tms320_c55x_test	"B"		6a123456	"B 0x123456"
tms320_c55x_test	"CALL"		6c123456	"CALL 0x123456"

tms320_c55x_test	"BCC"		6780		"BCC 0xF, AC0 == 0"
tms320_c55x_test	"BCC"		6d001234	"BCC 0x1234, AC0 == 0"
tms320_c55x_test	"BCC"		6800123456	"BCC 0x123456, AC0 == 0"
tms320_c55x_test	"BCC"		6f001122	"BCC 0x22, AC0 == 0x11"

tms320_c55x_test	"CALLCC"	6900123456	"CALLCC 0x123456, AC0 == 0"
tms320_c55x_test	"CALLCC"	6e001234	"CALLCC 0x1234, AC0 == 0"

# ADD/SUB/AND/OR/XOR/MOV

tms320_c55x_test	"ADD"		70112240	"ADD 0x1122 << 0x0, AC1, AC0"
tms320_c55x_test	"SUB"		71112241	"SUB 0x1122 << 0x1, AC1, AC0"
tms320_c55x_test	"AND"		72112242	"AND 0x1122 << 0x2, AC1, AC0"
tms320_c55x_test	"OR"		73112243	"OR 0x1122 << 0x3, AC1, AC0"
tms320_c55x_test	"XOR"		74112244	"XOR 0x1122 << 0x4, AC1, AC0"
tms320_c55x_test	"MOV"		75112245	"MOV 0x1122 << 0x5, AC0"

# BFXTR/BFXPA/MOV

tms320_c55x_test	"BFXTR"		76112200	"BFXTR 0x1122, AC0, AC0"
tms320_c55x_test	"BFXPA"		76112204	"BFXPA 0x1122, AC0, AC0"
tms320_c55x_test	"MOV"		76112208	"MOV 0x1122, AC0"
tms320_c55x_test	"AMOV"		77112200	"AMOV 0x1122, AC0"

tms320_c55x_test	"MOV"		78112200	"MOV 0x1122, DP"
tms320_c55x_test	"MOV"		78112202	"MOV 0x1122, SSP"
tms320_c55x_test	"MOV"		78112204	"MOV 0x1122, CDP"
tms320_c55x_test	"MOV"		78112206	"MOV 0x1122, BSA01"
tms320_c55x_test	"MOV"		78112208	"MOV 0x1122, BSA23"
tms320_c55x_test	"MOV"		7811220a	"MOV 0x1122, BSA45"
tms320_c55x_test	"MOV"		7811220c	"MOV 0x1122, BSA67"
tms320_c55x_test	"MOV"		7811220e	"MOV 0x1122, BSAC"
tms320_c55x_test	"MOV"		78112210	"MOV 0x1122, SP"

# MPYK/MACK/ADD/SUB/AND/OR/XOR/MOV

tms320_c55x_test	"MYPK"		79112240	"MPYK 0x1122, AC1, AC0"
tms320_c55x_test	"MACK"		79112242	"MACK T0, 0x1122, AC1, AC0"

tms320_c55x_test	"ADD"		7a112240	"ADD 0x1122 << #16, AC1, AC0"
tms320_c55x_test	"SUB"		7a112242	"SUB 0x1122 << #16, AC1, AC0"
tms320_c55x_test	"AND"		7a112244	"AND 0x1122 << #16, AC1, AC0"
tms320_c55x_test	"OR"		7a112246	"OR 0x1122 << #16, AC1, AC0"
tms320_c55x_test	"XOR"		7a112248	"XOR 0x1122 << #16, AC1, AC0"
tms320_c55x_test	"MOV"		7a11224a	"MOV 0x1122 << #16, AC0"

tms320_c55x_test	"ADD"		7b112240	"ADD 0x1122, AC0, T0"
tms320_c55x_test	"SUB"		7c112240	"SUB 0x1122, AC0, T0"
tms320_c55x_test	"AND"		7d112240	"AND 0x1122, AC0, T0"
tms320_c55x_test	"OR"		7e112240	"OR 0x1122, AC0, T0"
tms320_c55x_test	"XOR"		7f112240	"XOR 0x1122, AC0, T0"
